{
  "methods": {
    "addActivity(android.os.UserHandle,android.content.pm.LauncherActivityInfo)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "userHandle",
        "activityInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addActivity(android.os.UserHandle,android.content.pm.LauncherActivityInfo)",
      "documentation": "Adds a {@link LauncherActivityInfo} to be retrieved by {@link #getActivityList(String,\nUserHandle)}.\n\n@param userHandle the user handle to be added.\n@param activityInfo the {@link LauncherActivityInfo} to be added.\n"
    },
    "addApplicationInfo(android.os.UserHandle,java.lang.String,android.content.pm.ApplicationInfo)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "userHandle",
        "packageName",
        "applicationInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addApplicationInfo(android.os.UserHandle,java.lang.String,android.content.pm.ApplicationInfo)",
      "documentation": "Adds a {@link ApplicationInfo} to be retrieved by {@link #getApplicationInfo(String, int,\nUserHandle)}.\n\n@param userHandle the user handle to be added.\n@param packageName the package name to be added.\n@param applicationInfo the application info to be added.\n"
    },
    "addDynamicShortcut(android.content.pm.ShortcutInfo)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "shortcutInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addDynamicShortcut(android.content.pm.ShortcutInfo)",
      "documentation": "Adds a dynamic shortcut to be returned by {@link #getShortcuts(ShortcutQuery, UserHandle)}.\n\n@param shortcutInfo the shortcut to add.\n"
    },
    "addEnabledPackage(android.os.UserHandle,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "userHandle",
        "packageName"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addEnabledPackage(android.os.UserHandle,java.lang.String)",
      "documentation": "Adds an enabled package to be checked by {@link #isPackageEnabled(String, UserHandle)}.\n\n@param userHandle the user handle to be added.\n@param packageName the package name to be added.\n"
    },
    "addShortcutConfigActivity(android.os.UserHandle,android.content.pm.LauncherActivityInfo)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "userHandle",
        "activityInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addShortcutConfigActivity(android.os.UserHandle,android.content.pm.LauncherActivityInfo)",
      "documentation": "Adds a {@link LauncherActivityInfo} to be retrieved by {@link\n#getShortcutConfigActivityList(String, UserHandle)}.\n\n@param userHandle the user handle to be added.\n@param activityInfo the {@link LauncherActivityInfo} to be added.\n"
    },
    "getActivityList(java.lang.String,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName",
        "user"
      ],
      "returnType": "java.util.List\u003candroid.content.pm.LauncherActivityInfo\u003e",
      "exceptions": [],
      "minSdk": 21,
      "name": "getActivityList(java.lang.String,android.os.UserHandle)"
    },
    "getAllPackageInstallerSessions()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.content.pm.PackageInstaller.SessionInfo\u003e",
      "exceptions": [],
      "minSdk": 29,
      "name": "getAllPackageInstallerSessions()"
    },
    "getApplicationInfo(java.lang.String,int,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName",
        "flags",
        "user"
      ],
      "returnType": "android.content.pm.ApplicationInfo",
      "exceptions": [
        "android.content.pm.PackageManager.NameNotFoundException"
      ],
      "minSdk": 26,
      "name": "getApplicationInfo(java.lang.String,int,android.os.UserHandle)"
    },
    "getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "info"
      ],
      "returnType": "android.content.IntentSender",
      "exceptions": [],
      "minSdk": 26,
      "name": "getShortcutConfigActivityIntent(android.content.pm.LauncherActivityInfo)"
    },
    "getShortcutConfigActivityList(java.lang.String,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName",
        "user"
      ],
      "returnType": "java.util.List\u003candroid.content.pm.LauncherActivityInfo\u003e",
      "exceptions": [],
      "minSdk": 26,
      "name": "getShortcutConfigActivityList(java.lang.String,android.os.UserHandle)"
    },
    "getShortcuts(android.content.pm.LauncherApps.ShortcutQuery,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "query",
        "user"
      ],
      "returnType": "java.util.List\u003candroid.content.pm.ShortcutInfo\u003e",
      "exceptions": [],
      "minSdk": 25,
      "name": "getShortcuts(android.content.pm.LauncherApps.ShortcutQuery,android.os.UserHandle)",
      "documentation": "This method is an incomplete implementation of this API that only supports querying for pinned\ndynamic shortcuts. It also doesn\u0027t not support {@link ShortcutQuery#setChangedSince(long)}.\n"
    },
    "getSuspendedPackageLauncherExtras(java.lang.String,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName",
        "user"
      ],
      "returnType": "android.os.Bundle",
      "exceptions": [],
      "minSdk": 28,
      "name": "getSuspendedPackageLauncherExtras(java.lang.String,android.os.UserHandle)"
    },
    "hasShortcutHostPermission()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 24,
      "name": "hasShortcutHostPermission()"
    },
    "isActivityEnabled(android.content.ComponentName,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "component",
        "user"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isActivityEnabled(android.content.ComponentName,android.os.UserHandle)"
    },
    "isPackageEnabled(java.lang.String,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName",
        "user"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isPackageEnabled(java.lang.String,android.os.UserHandle)"
    },
    "matchesPackage(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "packageName"
      ],
      "returnType": "java.util.function.Predicate\u003candroid.content.pm.LauncherActivityInfo\u003e",
      "exceptions": [],
      "name": "matchesPackage(java.lang.String)"
    },
    "notifyPackageAdded(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "packageName"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "notifyPackageAdded(java.lang.String)",
      "documentation": "Fires {@link LauncherApps.Callback#onPackageAdded(String, UserHandle)} on all of the registered\ncallbacks, with the provided packageName.\n\n@param packageName the package the was added.\n"
    },
    "notifyPackageRemoved(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "packageName"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "notifyPackageRemoved(java.lang.String)",
      "documentation": "Fires {@link LauncherApps.Callback#onPackageRemoved(String, UserHandle)} on all of the\nregistered callbacks, with the provided packageName.\n\n@param packageName the package the was removed.\n"
    },
    "pinShortcuts(java.lang.String,java.util.List\u003cjava.lang.String\u003e,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName",
        "shortcutIds",
        "user"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 25,
      "name": "pinShortcuts(java.lang.String,java.util.List\u003cjava.lang.String\u003e,android.os.UserHandle)"
    },
    "registerCallback(android.content.pm.LauncherApps.Callback)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "registerCallback(android.content.pm.LauncherApps.Callback)"
    },
    "registerCallback(android.content.pm.LauncherApps.Callback,android.os.Handler)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "callback",
        "handler"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "registerCallback(android.content.pm.LauncherApps.Callback,android.os.Handler)"
    },
    "registerPackageInstallerSessionCallback(java.util.concurrent.Executor,android.content.pm.PackageInstaller.SessionCallback)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "executor",
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 29,
      "name": "registerPackageInstallerSessionCallback(java.util.concurrent.Executor,android.content.pm.PackageInstaller.SessionCallback)"
    },
    "setHasShortcutHostPermission(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "permission"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setHasShortcutHostPermission(boolean)",
      "documentation": "Sets the return value of {@link #hasShortcutHostPermission()}. If this isn\u0027t explicitly set,\n{@link #hasShortcutHostPermission()} defaults to returning false.\n\n@param permission boolean to be returned\n"
    },
    "shortcutsChanged(java.lang.String,java.util.List\u003candroid.content.pm.ShortcutInfo\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "packageName",
        "shortcuts"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "shortcutsChanged(java.lang.String,java.util.List\u003candroid.content.pm.ShortcutInfo\u003e)"
    },
    "shouldHideFromSuggestions(java.lang.String,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName",
        "user"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 29,
      "name": "shouldHideFromSuggestions(java.lang.String,android.os.UserHandle)"
    },
    "startAppDetailsActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "component",
        "user",
        "sourceBounds",
        "opts"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "startAppDetailsActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)"
    },
    "startPackageInstallerSessionDetailsActivity(android.content.pm.PackageInstaller.SessionInfo,android.graphics.Rect,android.os.Bundle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "sessionInfo",
        "sourceBounds",
        "opts"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 29,
      "name": "startPackageInstallerSessionDetailsActivity(android.content.pm.PackageInstaller.SessionInfo,android.graphics.Rect,android.os.Bundle)"
    },
    "startShortcut(android.content.pm.ShortcutInfo,android.graphics.Rect,android.os.Bundle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "shortcut",
        "sourceBounds",
        "startActivityOptions"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 25,
      "name": "startShortcut(android.content.pm.ShortcutInfo,android.graphics.Rect,android.os.Bundle)"
    },
    "startShortcut(java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName",
        "shortcutId",
        "sourceBounds",
        "startActivityOptions",
        "user"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 25,
      "name": "startShortcut(java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)"
    },
    "unregisterCallback(android.content.pm.LauncherApps.Callback)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "unregisterCallback(android.content.pm.LauncherApps.Callback)"
    },
    "unregisterPackageInstallerSessionCallback(android.content.pm.PackageInstaller.SessionCallback)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 29,
      "name": "unregisterPackageInstallerSessionCallback(android.content.pm.PackageInstaller.SessionCallback)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.L",
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.N",
    "android.os.Build.VERSION_CODES.N_MR1",
    "android.os.Build.VERSION_CODES.O",
    "android.os.Build.VERSION_CODES.P",
    "android.os.Build.VERSION_CODES.Q",
    "org.robolectric.util.reflector.Reflector.reflector",
    "android.content.ComponentName",
    "android.content.IntentSender",
    "android.content.pm.ApplicationInfo",
    "android.content.pm.LauncherActivityInfo",
    "android.content.pm.LauncherApps",
    "android.content.pm.LauncherApps.ShortcutQuery",
    "android.content.pm.PackageInstaller.SessionCallback",
    "android.content.pm.PackageInstaller.SessionInfo",
    "android.content.pm.PackageManager.NameNotFoundException",
    "android.content.pm.ShortcutInfo",
    "android.graphics.Rect",
    "android.os.Bundle",
    "android.os.Handler",
    "android.os.Looper",
    "android.os.Process",
    "android.os.UserHandle",
    "android.util.Pair",
    "androidx.annotation.NonNull",
    "androidx.annotation.Nullable",
    "com.google.common.collect.HashMultimap",
    "com.google.common.collect.Iterables",
    "com.google.common.collect.Lists",
    "com.google.common.collect.Multimap",
    "java.util.ArrayList",
    "java.util.HashMap",
    "java.util.List",
    "java.util.Map",
    "java.util.concurrent.Executor",
    "java.util.function.Predicate",
    "java.util.stream.Collectors",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.util.reflector.Accessor",
    "org.robolectric.util.reflector.ForType",
    "org.robolectric.shadows.ShadowLauncherApps.ReflectorShortcutQuery"
  ],
  "name": "org.robolectric.shadows.ShadowLauncherApps",
  "documentation": "Shadow of {@link android.content.pm.LauncherApps}. "
}