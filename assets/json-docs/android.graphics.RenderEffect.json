{
  "methods": {
    "nativeCreateBitmapEffect(long,float,float,float,float,float,float,float,float)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "bitmapHandle",
        "srcLeft",
        "srcTop",
        "srcRight",
        "srcBottom",
        "dstLeft",
        "dstTop",
        "dstRight",
        "dstBottom"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 31,
      "name": "nativeCreateBitmapEffect(long,float,float,float,float,float,float,float,float)"
    },
    "nativeCreateBlendModeEffect(long,long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "dst",
        "src",
        "blendmode"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 31,
      "name": "nativeCreateBlendModeEffect(long,long,int)"
    },
    "nativeCreateBlurEffect(float,float,long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "radiusX",
        "radiusY",
        "nativeInput",
        "edgeTreatment"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 31,
      "name": "nativeCreateBlurEffect(float,float,long,int)"
    },
    "nativeCreateChainEffect(long,long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "outer",
        "inner"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 31,
      "name": "nativeCreateChainEffect(long,long)"
    },
    "nativeCreateColorFilterEffect(long,long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "colorFilter",
        "nativeInput"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 31,
      "name": "nativeCreateColorFilterEffect(long,long)"
    },
    "nativeCreateOffsetEffect(float,float,long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "offsetX",
        "offsetY",
        "nativeInput"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 31,
      "name": "nativeCreateOffsetEffect(float,float,long)"
    },
    "nativeCreateShaderEffect(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "shader"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 31,
      "name": "nativeCreateShaderEffect(long)"
    },
    "nativeGetFinalizer()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 31,
      "name": "nativeGetFinalizer()"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.O",
    "android.os.Build.VERSION_CODES.S",
    "android.graphics.RenderEffect",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.nativeruntime.DefaultNativeRuntimeLoader",
    "org.robolectric.nativeruntime.RenderEffectNatives",
    "org.robolectric.shadows.ShadowNativeRenderEffect.Picker",
    "org.robolectric.shadows.ShadowNativeRenderEffect.Picker"
  ],
  "name": "org.robolectric.shadows.ShadowNativeRenderEffect",
  "documentation": "Shadow for {@link RenderEffect} that is backed by native code "
}