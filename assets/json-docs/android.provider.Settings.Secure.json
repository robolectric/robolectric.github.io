{
  "methods": {
    "\u003cT\u003eget(java.lang.Class\u003cT\u003e,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "type",
        "name"
      ],
      "returnType": "java.util.Optional\u003cT\u003e",
      "exceptions": [],
      "name": "\u003cT\u003eget(java.lang.Class\u003cT\u003e,java.lang.String)"
    },
    "getFloat(android.content.ContentResolver,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name"
      ],
      "returnType": "float",
      "exceptions": [
        "android.provider.Settings.SettingNotFoundException"
      ],
      "name": "getFloat(android.content.ContentResolver,java.lang.String)"
    },
    "getFloat(android.content.ContentResolver,java.lang.String,float)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "def"
      ],
      "returnType": "float",
      "exceptions": [],
      "name": "getFloat(android.content.ContentResolver,java.lang.String,float)"
    },
    "getInt(android.content.ContentResolver,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name"
      ],
      "returnType": "int",
      "exceptions": [
        "android.provider.Settings.SettingNotFoundException"
      ],
      "name": "getInt(android.content.ContentResolver,java.lang.String)"
    },
    "getInt(android.content.ContentResolver,java.lang.String,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "def"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "getInt(android.content.ContentResolver,java.lang.String,int)"
    },
    "getIntForUser(android.content.ContentResolver,java.lang.String,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "userHandle"
      ],
      "returnType": "int",
      "exceptions": [
        "android.provider.Settings.SettingNotFoundException"
      ],
      "name": "getIntForUser(android.content.ContentResolver,java.lang.String,int)"
    },
    "getIntForUser(android.content.ContentResolver,java.lang.String,int,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "def",
        "userHandle"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "getIntForUser(android.content.ContentResolver,java.lang.String,int,int)"
    },
    "getLong(android.content.ContentResolver,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name"
      ],
      "returnType": "long",
      "exceptions": [
        "android.provider.Settings.SettingNotFoundException"
      ],
      "name": "getLong(android.content.ContentResolver,java.lang.String)"
    },
    "getLong(android.content.ContentResolver,java.lang.String,long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "def"
      ],
      "returnType": "long",
      "exceptions": [],
      "name": "getLong(android.content.ContentResolver,java.lang.String,long)"
    },
    "getString(android.content.ContentResolver,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getString(android.content.ContentResolver,java.lang.String)"
    },
    "getStringForUser(android.content.ContentResolver,java.lang.String,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "userHandle"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getStringForUser(android.content.ContentResolver,java.lang.String,int)"
    },
    "put(android.content.ContentResolver,java.lang.String,java.lang.Object)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "value"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "put(android.content.ContentResolver,java.lang.String,java.lang.Object)"
    },
    "putFloat(android.content.ContentResolver,java.lang.String,float)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "value"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "putFloat(android.content.ContentResolver,java.lang.String,float)"
    },
    "putInt(android.content.ContentResolver,java.lang.String,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "value"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "putInt(android.content.ContentResolver,java.lang.String,int)"
    },
    "putIntForUser(android.content.ContentResolver,java.lang.String,int,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "value",
        "userHandle"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 21,
      "name": "putIntForUser(android.content.ContentResolver,java.lang.String,int,int)"
    },
    "putLong(android.content.ContentResolver,java.lang.String,long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "value"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "putLong(android.content.ContentResolver,java.lang.String,long)"
    },
    "putString(android.content.ContentResolver,java.lang.String,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "name",
        "value"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "putString(android.content.ContentResolver,java.lang.String,java.lang.String)"
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()"
    },
    "setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "provider",
        "enabled"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 16,
      "name": "setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)"
    },
    "setLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,boolean,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "cr",
        "provider",
        "enabled",
        "uid"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "maxSdk": 28,
      "name": "setLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,boolean,int)"
    },
    "updateEnabledProviders(android.content.ContentResolver,java.lang.String,boolean)": {
      "isImplementation": false,
      "modifiers": [
        "static"
      ],
      "params": [
        "cr",
        "provider",
        "enabled"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "updateEnabledProviders(android.content.ContentResolver,java.lang.String,boolean)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.JELLY_BEAN",
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.P",
    "android.os.Build.VERSION_CODES.Q",
    "android.os.Build.VERSION_CODES.R",
    "android.provider.Settings.Secure.LOCATION_MODE_OFF",
    "org.robolectric.util.reflector.Reflector.reflector",
    "android.content.ContentResolver",
    "android.content.Context",
    "android.content.Intent",
    "android.location.LocationManager",
    "android.provider.Settings",
    "android.provider.Settings.Secure",
    "android.provider.Settings.SettingNotFoundException",
    "android.text.TextUtils",
    "com.google.common.collect.ImmutableMap",
    "java.util.Arrays",
    "java.util.HashMap",
    "java.util.HashSet",
    "java.util.List",
    "java.util.Map",
    "java.util.Objects",
    "java.util.Optional",
    "java.util.Set",
    "java.util.concurrent.ConcurrentHashMap",
    "org.robolectric.RuntimeEnvironment",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.Resetter",
    "org.robolectric.util.reflector.ForType",
    "org.robolectric.util.reflector.Static"
  ],
  "name": "org.robolectric.shadows.ShadowSettings.ShadowSecure"
}