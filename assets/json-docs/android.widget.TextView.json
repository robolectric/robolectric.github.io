{
  "methods": {
    "addTextChangedListener(android.text.TextWatcher)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "watcher"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addTextChangedListener(android.text.TextWatcher)"
    },
    "dumpAttributes(java.io.PrintStream)": {
      "isImplementation": false,
      "modifiers": [
        "protected"
      ],
      "params": [
        "out"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "dumpAttributes(java.io.PrintStream)"
    },
    "getCompoundDrawablesWithIntrinsicBoundsBottom()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getCompoundDrawablesWithIntrinsicBoundsBottom()"
    },
    "getCompoundDrawablesWithIntrinsicBoundsLeft()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getCompoundDrawablesWithIntrinsicBoundsLeft()"
    },
    "getCompoundDrawablesWithIntrinsicBoundsRight()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getCompoundDrawablesWithIntrinsicBoundsRight()"
    },
    "getCompoundDrawablesWithIntrinsicBoundsTop()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getCompoundDrawablesWithIntrinsicBoundsTop()"
    },
    "getOnEditorActionListener()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.widget.TextView.OnEditorActionListener",
      "exceptions": [],
      "name": "getOnEditorActionListener()"
    },
    "getPreviousKeyCode(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "index"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "getPreviousKeyCode(int)"
    },
    "getPreviousKeyEvent(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "index"
      ],
      "returnType": "android.view.KeyEvent",
      "exceptions": [],
      "name": "getPreviousKeyEvent(int)"
    },
    "getTextAppearanceId()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getTextAppearanceId()"
    },
    "getTextServicesLocale()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.Locale",
      "exceptions": [],
      "name": "getTextServicesLocale()"
    },
    "getWatchers()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.text.TextWatcher\u003e",
      "exceptions": [],
      "name": "getWatchers()",
      "documentation": "@return the list of currently registered watchers/listeners\n"
    },
    "innerText()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "innerText()",
      "documentation": "Returns the text string of this {@code TextView}.\n\nRobolectric extension.\n"
    },
    "onKeyDown(int,android.view.KeyEvent)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "keyCode",
        "event"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "onKeyDown(int,android.view.KeyEvent)"
    },
    "onKeyUp(int,android.view.KeyEvent)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "keyCode",
        "event"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "onKeyUp(int,android.view.KeyEvent)"
    },
    "removeTextChangedListener(android.text.TextWatcher)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "watcher"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "removeTextChangedListener(android.text.TextWatcher)"
    },
    "setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "left",
        "top",
        "right",
        "bottom"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)"
    },
    "setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "l"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)"
    },
    "setTextAppearance(android.content.Context,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "context",
        "resid"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setTextAppearance(android.content.Context,int)"
    }
  },
  "imports": [
    "org.robolectric.util.reflector.Reflector.reflector",
    "android.content.Context",
    "android.text.TextWatcher",
    "android.view.KeyEvent",
    "android.view.View",
    "android.widget.TextView",
    "java.io.PrintStream",
    "java.util.ArrayList",
    "java.util.List",
    "java.util.Locale",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.util.reflector.Direct",
    "org.robolectric.util.reflector.ForType",
    "org.robolectric.shadows.ShadowTextView.TextViewReflector"
  ],
  "name": "org.robolectric.shadows.ShadowTextView"
}