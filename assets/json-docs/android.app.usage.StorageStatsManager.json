{
  "methods": {
    "addStorageStats(java.util.UUID,java.lang.String,android.os.UserHandle,android.app.usage.StorageStats)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "storageUuid",
        "packageName",
        "userHandle",
        "storageStatsToReturn"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addStorageStats(java.util.UUID,java.lang.String,android.os.UserHandle,android.app.usage.StorageStats)",
      "documentation": "Sets the {@link StorageStats} for given {@code storageUuid}, {@code packageName} and {@code\nuserHandle}. If {@code queryStatsForPackage} is called with matching {@code storageUuid},\n{@code packageName} and {@code userHandle}, the {@code storageStatsToReturn} will be returned\ndirectly. If {@code queryStatsForUser} is called with matching {@code storageUuid} and {@code\nuserHandle}, then an accumulated {@link StorageStats} will be returned.\n"
    },
    "clearStorageStats()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "clearStorageStats()",
      "documentation": "Clears all {@link StorageStats} set in {@link ShadowStorageStatsManager#addStorageStats}. "
    },
    "createFreeAndTotalBytesMapWithSingleEntry(java.util.UUID,long,long)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "storageUuid",
        "freeBytes",
        "totalBytes"
      ],
      "returnType": "java.util.Map\u003cjava.util.UUID,org.robolectric.shadows.ShadowStorageStatsManager.FreeAndTotalBytesPair\u003e",
      "exceptions": [],
      "name": "createFreeAndTotalBytesMapWithSingleEntry(java.util.UUID,long,long)"
    },
    "getFreeBytes(java.util.UUID)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "storageUuid"
      ],
      "returnType": "long",
      "exceptions": [
        "java.io.IOException"
      ],
      "name": "getFreeBytes(java.util.UUID)",
      "documentation": "Fake implementation of {@link StorageStatsManager#getFreeBytes} that returns test setup values.\nThis fake implementation does not check for access permission. It only checks for arguments\nmatching those set in {@link ShadowStorageStatsManager#setStorageDeviceFreeAndTotalBytes}.\n"
    },
    "getTotalBytes(java.util.UUID)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "storageUuid"
      ],
      "returnType": "long",
      "exceptions": [
        "java.io.IOException"
      ],
      "name": "getTotalBytes(java.util.UUID)",
      "documentation": "Fake implementation of {@link StorageStatsManager#getTotalBytes} that returns test setup\nvalues. This fake implementation does not check for access permission. It only checks for\narguments matching those set in {@link\nShadowStorageStatsManager#setStorageDeviceFreeAndTotalBytes}.\n"
    },
    "queryStatsForPackage(java.util.UUID,java.lang.String,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "storageUuid",
        "packageName",
        "user"
      ],
      "returnType": "android.app.usage.StorageStats",
      "exceptions": [
        "android.content.pm.PackageManager.NameNotFoundException",
        "java.io.IOException"
      ],
      "name": "queryStatsForPackage(java.util.UUID,java.lang.String,android.os.UserHandle)",
      "documentation": "Fake implementation of {@link StorageStatsManager#queryStatsForPackage} that returns test setup\nvalues. This fake implementation does not check for access permission. It only checks for\narguments matching those set in {@link ShadowStorageStatsManager#addStorageStats}.\n"
    },
    "queryStatsForUser(java.util.UUID,android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "storageUuid",
        "user"
      ],
      "returnType": "android.app.usage.StorageStats",
      "exceptions": [
        "android.content.pm.PackageManager.NameNotFoundException",
        "java.io.IOException"
      ],
      "name": "queryStatsForUser(java.util.UUID,android.os.UserHandle)",
      "documentation": "Fake implementation of {@link StorageStatsManager#queryStatsForUser} that returns an\naccumulated {@link StorageStats} based on the setup values for the user. This fake\nimplementation does not check for access permission. It only checks for arguments matching\nthose set in {@link ShadowStorageStatsManager#addStorageStats}.\n"
    },
    "removeStorageDevice(java.util.UUID)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "storageUuid"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "removeStorageDevice(java.util.UUID)",
      "documentation": "Removes a storage device identified by {@code storageUuid} if it\u0027s currently present.\nOtherwise, this method will be a no-op.\n"
    },
    "setStorageDeviceFreeAndTotalBytes(java.util.UUID,long,long)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "storageUuid",
        "freeBytes",
        "totalBytes"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setStorageDeviceFreeAndTotalBytes(java.util.UUID,long,long)",
      "documentation": "Sets the {@code storageUuid} to return the specified {@code freeBytes} and {@code totalBytes}\nwhen queried in {@link #getFreeBytes} and {@link #getTotalBytes} respectively.\n\n\u003cp\u003eBoth {@code freeBytes} and {@code totalBytes} have to be non-negative, else this method will\nthrow {@link IllegalArgumentException}.\n"
    }
  },
  "imports": [
    "com.google.common.base.Preconditions.checkArgument",
    "android.app.usage.StorageStats",
    "android.app.usage.StorageStatsManager",
    "android.content.pm.PackageManager",
    "android.os.Build",
    "android.os.Parcel",
    "android.os.UserHandle",
    "android.os.storage.StorageManager",
    "com.google.auto.value.AutoValue",
    "java.io.IOException",
    "java.util.Map",
    "java.util.UUID",
    "java.util.concurrent.ConcurrentHashMap",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.shadows.ShadowStorageStatsManager.FreeAndTotalBytesPair",
    "org.robolectric.shadows.ShadowStorageStatsManager.StorageStatsKey"
  ],
  "name": "org.robolectric.shadows.ShadowStorageStatsManager",
  "documentation": "Fake implementation of {@link android.app.usage.StorageStatsManager} that provides a fake\nimplementation of query for {@link StorageStats} of a package.\n"
}