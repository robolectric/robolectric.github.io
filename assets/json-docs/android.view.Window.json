{
  "methods": {
    "addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener",
        "handler"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 24,
      "name": "addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)"
    },
    "addPrivateFlags(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "flags"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 30,
      "name": "addPrivateFlags(int)"
    },
    "addSystemFlags(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "flags"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 29,
      "name": "addSystemFlags(int)"
    },
    "create(android.content.Context)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "context"
      ],
      "returnType": "android.view.Window",
      "exceptions": [
        "java.lang.ClassNotFoundException"
      ],
      "name": "create(android.content.Context)"
    },
    "getBackgroundDrawable()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.graphics.drawable.Drawable",
      "exceptions": [],
      "name": "getBackgroundDrawable()"
    },
    "getFlag(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "flag"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "getFlag(int)"
    },
    "getPrivateFlag(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "flag"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "getPrivateFlag(int)",
      "documentation": "Return the value from a private flag (a.k.a system flag).\n\n\u003cp\u003ePrivate flags can be set via either {@link #addPrivateFlags} (SDK 19-30) or {@link\n#addSystemFlags} (SDK 29+) methods.\n"
    },
    "getSoftInputMode()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getSoftInputMode()"
    },
    "getTitle()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.lang.CharSequence",
      "exceptions": [],
      "name": "getTitle()"
    },
    "removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 24,
      "name": "removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)"
    },
    "reportOnFrameMetricsAvailable(android.view.FrameMetrics)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "frameMetrics"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "reportOnFrameMetricsAvailable(android.view.FrameMetrics)",
      "documentation": "Calls {@link Window.OnFrameMetrisAvailableListener#onFrameMetricsAvailable()} on each current\nlistener with 0 as the dropCountSinceLastInvocation.\n"
    },
    "reportOnFrameMetricsAvailable(android.view.FrameMetrics,int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "frameMetrics",
        "dropCountSinceLastInvocation"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "reportOnFrameMetricsAvailable(android.view.FrameMetrics,int)",
      "documentation": "Calls {@link Window.OnFrameMetrisAvailableListener#onFrameMetricsAvailable()} on each current\nlistener.\n\n@param frameMetrics the {@link FrameMetrics} instance passed to the listeners.\n@param dropCountSinceLastInvocation the dropCountSinceLastInvocation passed to the listeners.\n"
    },
    "setFlags(int,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "flags",
        "mask"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setFlags(int,int)"
    },
    "setSoftInputMode(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "softInputMode"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSoftInputMode(int)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.N",
    "android.os.Build.VERSION_CODES.Q",
    "android.os.Build.VERSION_CODES.R",
    "org.robolectric.RuntimeEnvironment.getApiLevel",
    "org.robolectric.util.reflector.Reflector.reflector",
    "android.content.Context",
    "android.graphics.drawable.Drawable",
    "android.os.Handler",
    "android.view.FrameMetrics",
    "android.view.Window",
    "android.view.Window.OnFrameMetricsAvailableListener",
    "java.util.HashSet",
    "java.util.Set",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.util.ReflectionHelpers",
    "org.robolectric.util.ReflectionHelpers.ClassParameter",
    "org.robolectric.util.reflector.Direct",
    "org.robolectric.util.reflector.ForType",
    "org.robolectric.shadows.ShadowWindow.WindowReflector"
  ],
  "name": "org.robolectric.shadows.ShadowWindow"
}