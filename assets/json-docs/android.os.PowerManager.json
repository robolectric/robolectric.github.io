{
  "methods": {
    "addThermalStatusListener(java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 29,
      "name": "addThermalStatusListener(java.lang.Object)",
      "documentation": "This function adds a listener for thermal status change. "
    },
    "getCurrentThermalStatus()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 29,
      "name": "getCurrentThermalStatus()",
      "documentation": "This function returns the current thermal status of the device. "
    },
    "getLatestWakeLock()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "android.os.PowerManager.WakeLock",
      "exceptions": [],
      "name": "getLatestWakeLock()",
      "documentation": "Retrieves the most recent wakelock registered by the application\n\n@return Most recent wake lock.\n"
    },
    "getLocationPowerSaveMode()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 28,
      "name": "getLocationPowerSaveMode()",
      "documentation": "Returns how location features should behave when battery saver is on. When battery saver is\noff, this will always return {@link #LOCATION_MODE_NO_CHANGE}.\n"
    },
    "getRebootReasons()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "com.google.common.collect.ImmutableList\u003cjava.lang.String\u003e",
      "exceptions": [],
      "name": "getRebootReasons()",
      "documentation": "Returns the list of reasons for each reboot, in chronological order. "
    },
    "getTimesRebooted()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getTimesRebooted()",
      "documentation": "Returns the number of times {@link #reboot(String)} was called. "
    },
    "isDeviceIdleMode()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 23,
      "name": "isDeviceIdleMode()",
      "documentation": "@return false by default, or the value specified via {@link #setIsDeviceIdleMode(boolean)} "
    },
    "isIgnoringBatteryOptimizations(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 23,
      "name": "isIgnoringBatteryOptimizations(java.lang.String)"
    },
    "isInteractive()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 21,
      "name": "isInteractive()"
    },
    "isLightDeviceIdleMode()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 24,
      "name": "isLightDeviceIdleMode()",
      "documentation": "@return false by default, or the value specified via {@link #setIsLightDeviceIdleMode(boolean)}\n"
    },
    "isPowerSaveMode()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 21,
      "name": "isPowerSaveMode()"
    },
    "isScreenOn()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isScreenOn()"
    },
    "isWakeLockLevelSupported(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "level"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 21,
      "name": "isWakeLockLevelSupported(int)"
    },
    "newWakeLock(int,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "flags",
        "tag"
      ],
      "returnType": "android.os.PowerManager.WakeLock",
      "exceptions": [],
      "name": "newWakeLock(int,java.lang.String)"
    },
    "reboot(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "reason"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "reboot(java.lang.String)"
    },
    "removeThermalStatusListener(java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 29,
      "name": "removeThermalStatusListener(java.lang.Object)",
      "documentation": "This function removes a listener for thermal status change. "
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()",
      "documentation": "Discards the most recent {@code PowerManager.WakeLock}s "
    },
    "setCurrentThermalStatus(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "thermalStatus"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCurrentThermalStatus(int)",
      "documentation": "Sets the value returned by {@link #getCurrentThermalStatus()}. "
    },
    "setIgnoringBatteryOptimizations(java.lang.String,boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "packageName",
        "value"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIgnoringBatteryOptimizations(java.lang.String,boolean)"
    },
    "setIsDeviceIdleMode(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isDeviceIdleMode"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsDeviceIdleMode(boolean)",
      "documentation": "Sets the value returned by {@link #isDeviceIdleMode()}. "
    },
    "setIsInteractive(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "interactive"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsInteractive(boolean)"
    },
    "setIsLightDeviceIdleMode(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "lightDeviceIdleMode"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsLightDeviceIdleMode(boolean)",
      "documentation": "Sets the value returned by {@link #isLightDeviceIdleMode()}. "
    },
    "setIsPowerSaveMode(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "powerSaveMode"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsPowerSaveMode(boolean)"
    },
    "setIsScreenOn(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "screenOn"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsScreenOn(boolean)"
    },
    "setIsWakeLockLevelSupported(int,boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "level",
        "supported"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsWakeLockLevelSupported(int,boolean)"
    },
    "setLocationPowerSaveMode(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "locationMode"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setLocationPowerSaveMode(int)",
      "documentation": "Sets the value returned by {@link #getLocationPowerSaveMode()} when battery saver is on. "
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.N",
    "android.os.Build.VERSION_CODES.O",
    "android.os.Build.VERSION_CODES.P",
    "android.os.Build.VERSION_CODES.Q",
    "com.google.common.base.Preconditions.checkState",
    "org.robolectric.shadows.ShadowApplication.getInstance",
    "android.os.PowerManager",
    "android.os.WorkSource",
    "com.google.common.collect.ImmutableList",
    "java.util.ArrayList",
    "java.util.HashMap",
    "java.util.HashSet",
    "java.util.List",
    "java.util.Map",
    "java.util.Set",
    "org.robolectric.RuntimeEnvironment",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.Resetter",
    "org.robolectric.shadow.api.Shadow",
    "org.robolectric.shadows.ShadowPowerManager.ShadowWakeLock"
  ],
  "name": "org.robolectric.shadows.ShadowPowerManager",
  "documentation": "Shadow of PowerManager "
}