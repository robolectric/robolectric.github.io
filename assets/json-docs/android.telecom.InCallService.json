{
  "methods": {
    "__constructor__()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "__constructor__()"
    },
    "addCall(android.telecom.Call)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "call"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addCall(android.telecom.Call)"
    },
    "addCall(android.telecom.ParcelableCall)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "parcelableCall"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addCall(android.telecom.ParcelableCall)"
    },
    "canAddCall()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "canAddCall()"
    },
    "getBluetoothAudio()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.bluetooth.BluetoothDevice",
      "exceptions": [],
      "name": "getBluetoothAudio()",
      "documentation": "@return the last value provided to {@code requestBluetoothAudio()}. "
    },
    "getCallAudioState()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "android.telecom.CallAudioState",
      "exceptions": [],
      "name": "getCallAudioState()"
    },
    "getHandler()": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [],
      "returnType": "android.os.Handler",
      "exceptions": [],
      "name": "getHandler()"
    },
    "isInCallAdapterSet()": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isInCallAdapterSet()",
      "documentation": "Checks if the InCallService was bound using {@link\ncom.android.internal.telecom.IInCallService#setInCallAdapter(IInCallAdapter)}.\n\n\u003cp\u003eIf it was bound using this interface, the internal InCallAdapter will be set and it will\nforward invocations to FakeTelecomServer.\n\n\u003cp\u003eOtherwise, invoking these methods will yield NullPointerExceptions, so we will avoid\nforwarding the calls to the real objects.\n"
    },
    "onConnectionEvent(java.lang.String,java.lang.String,android.os.Bundle)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "callId",
        "event",
        "extras"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "onConnectionEvent(java.lang.String,java.lang.String,android.os.Bundle)",
      "documentation": "Exposes {@link IIInCallService.Stub#onConnectionEvent}. This is normally invoked by Telecom but\nin Robolectric, Telecom doesn\u0027t exist, so tests can invoke this to simulate Telecom\u0027s actions.\n"
    },
    "removeCall(android.telecom.Call)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "call"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "removeCall(android.telecom.Call)"
    },
    "requestBluetoothAudio(android.bluetooth.BluetoothDevice)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "bluetoothDevice"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 28,
      "name": "requestBluetoothAudio(android.bluetooth.BluetoothDevice)"
    },
    "setAudioRoute(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "audioRoute"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setAudioRoute(int)"
    },
    "setCanAddCall(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "canAddCall"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCanAddCall(boolean)",
      "documentation": "Set the value that {@code canAddCall()} method should return. "
    },
    "setMuted(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "muted"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setMuted(boolean)"
    },
    "setPostDialWait(java.lang.String,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "callId",
        "remaining"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setPostDialWait(java.lang.String,java.lang.String)",
      "documentation": "Exposes {@link IIInCallService.Stub#setPostDialWait}. This is normally invoked by Telecom but\nin Robolectric, Telecom doesn\u0027t exist, so tests can invoke this to simulate Telecom\u0027s actions.\n"
    },
    "setSupportedRouteMask(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "mask"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSupportedRouteMask(int)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.N_MR1",
    "android.os.Build.VERSION_CODES.P",
    "org.robolectric.shadow.api.Shadow.invokeConstructor",
    "org.robolectric.util.reflector.Reflector.reflector",
    "android.annotation.TargetApi",
    "android.bluetooth.BluetoothDevice",
    "android.os.Build.VERSION",
    "android.os.Bundle",
    "android.os.Handler",
    "android.telecom.Call",
    "android.telecom.CallAudioState",
    "android.telecom.InCallAdapter",
    "android.telecom.InCallService",
    "android.telecom.ParcelableCall",
    "android.telecom.Phone",
    "com.android.internal.os.SomeArgs",
    "com.android.internal.telecom.IInCallAdapter",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.shadow.api.Shadow",
    "org.robolectric.util.ReflectionHelpers",
    "org.robolectric.util.ReflectionHelpers.ClassParameter",
    "org.robolectric.util.reflector.Accessor",
    "org.robolectric.util.reflector.Direct",
    "org.robolectric.util.reflector.ForType",
    "org.robolectric.shadows.ShadowInCallService.ReflectorInCallService",
    "org.robolectric.shadows.ShadowInCallService.ReflectorPhone",
    "org.robolectric.shadows.ShadowInCallService.ReflectorInCallAdapter"
  ],
  "name": "org.robolectric.shadows.ShadowInCallService",
  "documentation": "Shadow for {@link android.telecom.InCallService}. "
}