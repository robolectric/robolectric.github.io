{
  "methods": {
    "__constructor__(android.content.Context,android.os.Handler)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "context",
        "handler"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "__constructor__(android.content.Context,android.os.Handler)"
    },
    "addApplicationExitInfo(java.lang.Object)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "info"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addApplicationExitInfo(java.lang.Object)",
      "documentation": "Adds given {@link ApplicationExitInfo}, see {@link ApplicationExitInfoBuilder} "
    },
    "addApplicationExitInfo(java.lang.String,int,int,int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "processName",
        "pid",
        "reason",
        "status"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addApplicationExitInfo(java.lang.String,int,int,int)",
      "documentation": "Adds an {@link ApplicationExitInfo} with the given information\n\n@deprecated Prefer using overload with {@link ApplicationExitInfoBuilder}\n"
    },
    "addOnUidImportanceListener(java.lang.Object,java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener",
        "importanceCutpoint"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "name": "addOnUidImportanceListener(java.lang.Object,java.lang.Object)"
    },
    "clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName",
        "observer"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)"
    },
    "fillInProcessInfo(android.app.ActivityManager.RunningAppProcessInfo)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "processInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "fillInProcessInfo(android.app.ActivityManager.RunningAppProcessInfo)"
    },
    "getAppTasks()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.app.ActivityManager.AppTask\u003e",
      "exceptions": [],
      "minSdk": 21,
      "name": "getAppTasks()",
      "documentation": "For tests, returns the list of {@link android.app.ActivityManager.AppTask} set using {@link\n#setAppTasks(List)}. Returns empty list if nothing is set.\n\n@see #setAppTasks(List)\n@return List of current AppTask.\n"
    },
    "getBackgroundPackage()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getBackgroundPackage()",
      "documentation": "@return Get the package name of the last background processes killed. "
    },
    "getCurrentUser()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 17,
      "name": "getCurrentUser()"
    },
    "getDeviceConfigurationInfo()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "android.content.pm.ConfigurationInfo",
      "exceptions": [],
      "name": "getDeviceConfigurationInfo()"
    },
    "getHistoricalProcessExitReasons(java.lang.Object,java.lang.Object,java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName",
        "pid",
        "maxNum"
      ],
      "returnType": "java.lang.Object",
      "exceptions": [],
      "minSdk": 30,
      "name": "getHistoricalProcessExitReasons(java.lang.Object,java.lang.Object,java.lang.Object)",
      "documentation": "Returns the matched {@link ApplicationExitInfo} added by {@link #addApplicationExitInfo}.\n{@code packageName} is ignored.\n"
    },
    "getLockTaskModeState()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 23,
      "name": "getLockTaskModeState()"
    },
    "getMemoryClass()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getMemoryClass()"
    },
    "getMemoryInfo(android.app.ActivityManager.MemoryInfo)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "outInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "getMemoryInfo(android.app.ActivityManager.MemoryInfo)"
    },
    "getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "inState"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)",
      "documentation": "Returns information seeded by {@link #setProcesses}. "
    },
    "getPackageImportance(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName"
      ],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 23,
      "name": "getPackageImportance(java.lang.String)"
    },
    "getRunningAppProcesses()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.app.ActivityManager.RunningAppProcessInfo\u003e",
      "exceptions": [],
      "name": "getRunningAppProcesses()"
    },
    "getRunningServices(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "maxNum"
      ],
      "returnType": "java.util.List\u003candroid.app.ActivityManager.RunningServiceInfo\u003e",
      "exceptions": [],
      "name": "getRunningServices(int)"
    },
    "getRunningTasks(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "maxNum"
      ],
      "returnType": "java.util.List\u003candroid.app.ActivityManager.RunningTaskInfo\u003e",
      "exceptions": [],
      "name": "getRunningTasks(int)"
    },
    "getService()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "android.app.IActivityManager",
      "exceptions": [],
      "minSdk": 26,
      "name": "getService()"
    },
    "getUidImportance(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "uid"
      ],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 26,
      "name": "getUidImportance(int)"
    },
    "isApplicationUserDataCleared()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isApplicationUserDataCleared()",
      "documentation": "Returns true after clearing application user data was requested by calling {@link\nActivityManager#clearApplicationUserData()}.\n"
    },
    "isBackgroundRestricted()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 28,
      "name": "isBackgroundRestricted()",
      "documentation": "Returns the background restriction state set by {@link #setBackgroundRestricted}. "
    },
    "isInLockTaskMode()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 21,
      "name": "isInLockTaskMode()"
    },
    "isLowRamDevice()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 19,
      "name": "isLowRamDevice()"
    },
    "isUserAMonkey()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isUserAMonkey()"
    },
    "killBackgroundProcesses(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "packageName"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "killBackgroundProcesses(java.lang.String)"
    },
    "removeOnUidImportanceListener(java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "name": "removeOnUidImportanceListener(java.lang.Object)"
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()"
    },
    "setAppTasks(java.util.List\u003candroid.app.ActivityManager.AppTask\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "appTasks"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setAppTasks(java.util.List\u003candroid.app.ActivityManager.AppTask\u003e)",
      "documentation": "Sets the values to be returned by {@link #getAppTasks()}.\n\n@see #getAppTasks()\n@param appTasks List of app tasks.\n"
    },
    "setBackgroundRestricted(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isBackgroundRestricted"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setBackgroundRestricted(boolean)",
      "documentation": "Sets the background restriction state reported by {@link\nActivityManager#isBackgroundRestricted}, but has no effect otherwise.\n"
    },
    "setDeviceConfigurationInfo(android.content.pm.ConfigurationInfo)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "configurationInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDeviceConfigurationInfo(android.content.pm.ConfigurationInfo)",
      "documentation": "Sets the {@link android.content.pm.ConfigurationInfo} returned by {@link\nActivityManager#getDeviceConfigurationInfo()}, but has no effect otherwise.\n"
    },
    "setIsLowRamDevice(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isLowRamDevice"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsLowRamDevice(boolean)",
      "documentation": "Override the return value of isLowRamDevice(). "
    },
    "setLockTaskModeState(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "lockTaskModeState"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setLockTaskModeState(int)",
      "documentation": "Sets lock task mode state to be reported by {@link ActivityManager#getLockTaskModeState}, but\nhas no effect otherwise.\n"
    },
    "setMemoryClass(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "memoryClass"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setMemoryClass(int)",
      "documentation": "@param memoryClass Set the application\u0027s memory class. "
    },
    "setMemoryInfo(android.app.ActivityManager.MemoryInfo)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "memoryInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setMemoryInfo(android.app.ActivityManager.MemoryInfo)",
      "documentation": "@param memoryInfo Set the application\u0027s memory info. "
    },
    "setProcesses(java.util.List\u003candroid.app.ActivityManager.RunningAppProcessInfo\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "processes"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setProcesses(java.util.List\u003candroid.app.ActivityManager.RunningAppProcessInfo\u003e)",
      "documentation": "@param processes List of running processes. "
    },
    "setServices(java.util.List\u003candroid.app.ActivityManager.RunningServiceInfo\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "services"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setServices(java.util.List\u003candroid.app.ActivityManager.RunningServiceInfo\u003e)",
      "documentation": "@param services List of running services. "
    },
    "setTasks(java.util.List\u003candroid.app.ActivityManager.RunningTaskInfo\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "tasks"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setTasks(java.util.List\u003candroid.app.ActivityManager.RunningTaskInfo\u003e)",
      "documentation": "@param tasks List of running tasks. "
    },
    "setUidImportance(int,int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "uid",
        "importance"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setUidImportance(int,int)"
    },
    "switchUser(android.os.UserHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "userHandle"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 29,
      "name": "switchUser(android.os.UserHandle)"
    },
    "switchUser(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "userid"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 17,
      "name": "switchUser(int)"
    }
  },
  "imports": [
    "android.app.ActivityManager.RunningAppProcessInfo.IMPORTANCE_GONE",
    "android.os.Build.VERSION_CODES.JELLY_BEAN_MR1",
    "android.os.Build.VERSION_CODES.KITKAT",
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.O",
    "android.os.Build.VERSION_CODES.P",
    "android.os.Build.VERSION_CODES.R",
    "java.util.stream.Collectors.toCollection",
    "org.robolectric.util.reflector.Reflector.reflector",
    "android.annotation.RequiresPermission",
    "android.app.ActivityManager",
    "android.app.ApplicationExitInfo",
    "android.app.IActivityManager",
    "android.content.Context",
    "android.content.pm.ConfigurationInfo",
    "android.content.pm.IPackageDataObserver",
    "android.content.pm.PackageManager",
    "android.content.pm.PackageManager.NameNotFoundException",
    "android.os.Build.VERSION_CODES",
    "android.os.Handler",
    "android.os.Process",
    "android.os.UserHandle",
    "android.util.ArrayMap",
    "android.util.SparseIntArray",
    "androidx.annotation.RequiresApi",
    "com.google.common.base.Preconditions",
    "java.util.ArrayDeque",
    "java.util.ArrayList",
    "java.util.Deque",
    "java.util.List",
    "java.util.concurrent.CopyOnWriteArrayList",
    "org.robolectric.RuntimeEnvironment",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.annotation.Resetter",
    "org.robolectric.shadow.api.Shadow",
    "org.robolectric.util.ReflectionHelpers",
    "org.robolectric.util.ReflectionHelpers.ClassParameter",
    "org.robolectric.util.reflector.Direct",
    "org.robolectric.util.reflector.ForType",
    "org.robolectric.shadows.ShadowActivityManager.ApplicationExitInfoBuilder",
    "org.robolectric.shadows.ShadowActivityManager.ActivityManagerReflector",
    "org.robolectric.shadows.ShadowActivityManager.ImportanceListener"
  ],
  "name": "org.robolectric.shadows.ShadowActivityManager",
  "documentation": "Shadow for {@link android.app.ActivityManager} "
}