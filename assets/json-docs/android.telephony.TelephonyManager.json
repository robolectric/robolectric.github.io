{
  "methods": {
    "\u003cT\u003egetCallbackForListener(java.lang.Class\u003cT\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "protected"
      ],
      "params": [
        "clazz"
      ],
      "returnType": "java.lang.Iterable\u003cT\u003e",
      "exceptions": [],
      "name": "\u003cT\u003egetCallbackForListener(java.lang.Class\u003cT\u003e)",
      "documentation": "Returns a view of {@code telephonyCallbackRegistrations} containing all elements that are of\nthe type {@code clazz}.\n"
    },
    "bootstrapAuthenticationRequest(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "appType",
        "nafId",
        "securityProtocol",
        "forceBootStrapping",
        "e",
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 31,
      "name": "bootstrapAuthenticationRequest(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)"
    },
    "checkPermission(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "static"
      ],
      "params": [
        "permission"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "checkPermission(java.lang.String)"
    },
    "checkReadPhoneStatePermission()": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "checkReadPhoneStatePermission()"
    },
    "checkReadPrivilegedPhoneStatePermission()": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "checkReadPrivilegedPhoneStatePermission()"
    },
    "clearPhoneTypes()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "clearPhoneTypes()",
      "documentation": "Removes all {@code subId} to {@code phoneType} mappings. "
    },
    "createForPhoneAccountHandle(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "handle"
      ],
      "returnType": "android.telephony.TelephonyManager",
      "exceptions": [],
      "minSdk": 26,
      "name": "createForPhoneAccountHandle(android.telecom.PhoneAccountHandle)",
      "documentation": "Returns {@code null} by default or the value specified via {@link\n#setTelephonyManagerForHandle(PhoneAccountHandle, TelephonyManager)}.\n"
    },
    "createForSubscriptionId(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "subId"
      ],
      "returnType": "android.telephony.TelephonyManager",
      "exceptions": [],
      "minSdk": 24,
      "name": "createForSubscriptionId(int)",
      "documentation": "Returns {@code null} by default or the value specified via {@link\n#setTelephonyManagerForSubscriptionId(int, TelephonyManager)}\n"
    },
    "createTelephonyDisplayInfo(int,int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "networkType",
        "overrideNetworkType"
      ],
      "returnType": "java.lang.Object",
      "exceptions": [],
      "name": "createTelephonyDisplayInfo(int,int)",
      "documentation": "Creates a {@link TelephonyDisplayInfo}.\n\n@param networkType The packet-switching cellular network type (see {@link NetworkType})\n@param overrideNetworkType The override network type (see {@link OverrideNetworkType})\n"
    },
    "getActiveModemCount()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 30,
      "name": "getActiveModemCount()",
      "documentation": "Returns 1 by default or the value specified via {@link #setActiveModemCount(int)}. "
    },
    "getAllCellInfo()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.telephony.CellInfo\u003e",
      "exceptions": [],
      "minSdk": 17,
      "name": "getAllCellInfo()"
    },
    "getBootstrapAuthenticationCallback()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.lang.Object",
      "exceptions": [],
      "name": "getBootstrapAuthenticationCallback()"
    },
    "getCallComposerStatus()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 31,
      "name": "getCallComposerStatus()"
    },
    "getCallState()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getCallState()",
      "documentation": "Call state may be specified via {@link #setCallState(int)}. "
    },
    "getCallStateForSubscription()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 31,
      "name": "getCallStateForSubscription()",
      "documentation": "Call state may be specified via {@link #setCallState(int)}. "
    },
    "getCarrierConfig()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "android.os.PersistableBundle",
      "exceptions": [],
      "minSdk": 26,
      "name": "getCarrierConfig()",
      "documentation": "Returns a new empty {@link PersistableBundle} by default, or the value specified via {@link\n#setCarrierConfig(PersistableBundle)}.\n"
    },
    "getCarrierIdFromSimMccMnc()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 29,
      "name": "getCarrierIdFromSimMccMnc()"
    },
    "getCarrierPackageNamesForIntent(android.content.Intent)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "intent"
      ],
      "returnType": "java.util.List\u003cjava.lang.String\u003e",
      "exceptions": [],
      "minSdk": 21,
      "name": "getCarrierPackageNamesForIntent(android.content.Intent)"
    },
    "getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "intent",
        "phoneId"
      ],
      "returnType": "java.util.List\u003cjava.lang.String\u003e",
      "exceptions": [],
      "minSdk": 23,
      "name": "getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)"
    },
    "getCellLocation()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "android.telephony.CellLocation",
      "exceptions": [],
      "name": "getCellLocation()"
    },
    "getCurrentPhoneType(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "subId"
      ],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 23,
      "name": "getCurrentPhoneType(int)"
    },
    "getDataActivity()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getDataActivity()",
      "documentation": "Data activity may be specified via {@link #setDataActivity(int)}. If no override is set, this\ndefaults to {@link TelephonyManager#DATA_ACTIVITY_NONE}.\n"
    },
    "getDataNetworkType()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 24,
      "name": "getDataNetworkType()",
      "documentation": "Returns whatever value was set by the last call to {@link #setDataNetworkType}, defaulting to\n{@link TelephonyManager#NETWORK_TYPE_UNKNOWN} if it was never called.\n"
    },
    "getDataState()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getDataState()",
      "documentation": "Data state may be specified via {@link #setDataState(int)}. If no override is set, this\ndefaults to {@link TelephonyManager#DATA_DISCONNECTED}.\n"
    },
    "getDeviceId()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getDeviceId()"
    },
    "getDeviceId(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "slot"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 23,
      "name": "getDeviceId(int)",
      "documentation": "Returns {@code null} by default or the value specified via {@link #setDeviceId(int, String)}.\n"
    },
    "getDeviceSoftwareVersion()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getDeviceSoftwareVersion()"
    },
    "getEmergencyCallbackMode()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 26,
      "name": "getEmergencyCallbackMode()"
    },
    "getEmergencyNumberList()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.Map\u003cjava.lang.Integer,java.util.List\u003candroid.telephony.emergency.EmergencyNumber\u003e\u003e",
      "exceptions": [],
      "minSdk": 30,
      "name": "getEmergencyNumberList()",
      "documentation": "Implementation for {@link TelephonyManager#getEmergencyNumberList}.\n\n@return an immutable map by default, unless set with {@link #setEmergencyNumberList}.\n"
    },
    "getEventFlags()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getEventFlags()",
      "documentation": "Returns the most recent flags passed to #listen().\n\n@return Event flags.\n@deprecated Avoid using.\n"
    },
    "getGroupIdLevel1()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 18,
      "name": "getGroupIdLevel1()"
    },
    "getImei()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 21,
      "name": "getImei()"
    },
    "getImei(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "slotIndex"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 26,
      "name": "getImei(int)"
    },
    "getLastSentVisualVoicemailSmsParams()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowTelephonyManager.VisualVoicemailSmsParams",
      "exceptions": [],
      "name": "getLastSentVisualVoicemailSmsParams()"
    },
    "getLastTelephonyCallback()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.lang.Object",
      "exceptions": [],
      "name": "getLastTelephonyCallback()",
      "documentation": "Returns the most recent callback passed to #registerTelephonyCallback(). "
    },
    "getLine1Number()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getLine1Number()"
    },
    "getListener()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.telephony.PhoneStateListener",
      "exceptions": [],
      "name": "getListener()",
      "documentation": "Returns the most recent listener passed to #listen().\n\n@return Phone state listener.\n@deprecated Avoid using.\n"
    },
    "getListenersForFlags(int)": {
      "isImplementation": false,
      "modifiers": [
        "protected"
      ],
      "params": [
        "flags"
      ],
      "returnType": "java.lang.Iterable\u003candroid.telephony.PhoneStateListener\u003e",
      "exceptions": [],
      "name": "getListenersForFlags(int)"
    },
    "getMeid()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 26,
      "name": "getMeid()"
    },
    "getMeid(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "slotIndex"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 26,
      "name": "getMeid(int)"
    },
    "getNetworkCountryIso()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getNetworkCountryIso()",
      "documentation": "Returns the SIM country lowercase. This matches the API this shadows:\nhttps://developer.android.com/reference/android/telephony/TelephonyManager#getNetworkCountryIso().\n"
    },
    "getNetworkOperator()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getNetworkOperator()"
    },
    "getNetworkOperatorName()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getNetworkOperatorName()"
    },
    "getNetworkSpecifier()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 26,
      "name": "getNetworkSpecifier()"
    },
    "getNetworkType()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getNetworkType()"
    },
    "getPhoneCapability()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.lang.Object",
      "exceptions": [],
      "minSdk": 31,
      "name": "getPhoneCapability()"
    },
    "getPhoneCount()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 23,
      "name": "getPhoneCount()",
      "documentation": "Returns 1 by default or the value specified via {@link #setPhoneCount(int)}. "
    },
    "getPhoneType()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getPhoneType()"
    },
    "getSentDialerSpecialCodes()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003cjava.lang.String\u003e",
      "exceptions": [],
      "name": "getSentDialerSpecialCodes()",
      "documentation": "Returns immutable list of special codes sent using {@link\nTelephonyManager#sendDialerSpecialCode(String)}. Special codes contained in the list are in the\norder they were sent.\n"
    },
    "getServiceState()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "android.telephony.ServiceState",
      "exceptions": [],
      "minSdk": 26,
      "name": "getServiceState()",
      "documentation": "Returns {@code null} by default or the value specified via {@link\n#setServiceState(ServiceState)}\n"
    },
    "getServiceState(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "includeLocationData"
      ],
      "returnType": "android.telephony.ServiceState",
      "exceptions": [],
      "minSdk": 33,
      "name": "getServiceState(int)",
      "documentation": "Returns {@code null} by default or the value specified via {@link\n#setServiceState(ServiceState)}\n"
    },
    "getShadowInstrumentation()": {
      "isImplementation": false,
      "modifiers": [
        "static"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowInstrumentation",
      "exceptions": [],
      "name": "getShadowInstrumentation()"
    },
    "getSignalStrength()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "android.telephony.SignalStrength",
      "exceptions": [],
      "minSdk": 28,
      "name": "getSignalStrength()"
    },
    "getSimCarrierId()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 28,
      "name": "getSimCarrierId()"
    },
    "getSimCountryIso()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getSimCountryIso()",
      "documentation": "Returns the SIM country lowercase. This matches the API it shadows:\nhttps://developer.android.com/reference/android/telephony/TelephonyManager#getSimCountryIso().\n"
    },
    "getSimCountryIso(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "subId"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 24,
      "maxSdk": 29,
      "name": "getSimCountryIso(int)"
    },
    "getSimLocale()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.Locale",
      "exceptions": [],
      "minSdk": 29,
      "name": "getSimLocale()",
      "documentation": "Returns sim locale set by {@link #setSimLocale}. "
    },
    "getSimOperator()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getSimOperator()"
    },
    "getSimOperatorName()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getSimOperatorName()"
    },
    "getSimSerialNumber()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getSimSerialNumber()"
    },
    "getSimState()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getSimState()"
    },
    "getSimState(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "slotIndex"
      ],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 26,
      "name": "getSimState(int)"
    },
    "getSubscriberId()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getSubscriberId()"
    },
    "getSubscriptionId(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "handle"
      ],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 30,
      "name": "getSubscriptionId(android.telecom.PhoneAccountHandle)"
    },
    "getUiccCardsInfo()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.Object",
      "exceptions": [],
      "minSdk": 29,
      "name": "getUiccCardsInfo()",
      "documentation": "Returns the UICC cards information set by {@link #setUiccCardsInfo}. "
    },
    "getUiccSlotsInfo()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.Object",
      "exceptions": [],
      "minSdk": 28,
      "name": "getUiccSlotsInfo()",
      "documentation": "Returns the UICC slots information set by {@link #setUiccSlotsInfo}. "
    },
    "getVisualVoicemailPackageName()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 26,
      "name": "getVisualVoicemailPackageName()",
      "documentation": "Returns the value set by {@link #setVisualVoicemailPackageName(String)}. "
    },
    "getVisualVoicemailSmsFilterSettings()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.telephony.VisualVoicemailSmsFilterSettings",
      "exceptions": [],
      "name": "getVisualVoicemailSmsFilterSettings()",
      "documentation": "Returns the last set {@link VisualVoicemailSmsFilterSettings}. "
    },
    "getVoiceMailAlphaTag()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getVoiceMailAlphaTag()",
      "documentation": "Returns {@code null} by default or the value specified via {@link\n#setVoiceMailAlphaTag(String)}.\n"
    },
    "getVoiceMailNumber()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getVoiceMailNumber()",
      "documentation": "Returns {@code null} by default, or the value specified via {@link\n#setVoiceMailNumber(String)}.\n"
    },
    "getVoiceNetworkType()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 24,
      "name": "getVoiceNetworkType()",
      "documentation": "Returns whatever value was set by the last call to {@link #setVoiceNetworkType}, defaulting to\n{@link TelephonyManager#NETWORK_TYPE_UNKNOWN} if it was never called.\n\n\u003cp\u003eAn exception will be thrown if the READ_PHONE_STATE permission has not been granted.\n"
    },
    "getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "handle"
      ],
      "returnType": "android.net.Uri",
      "exceptions": [],
      "minSdk": 24,
      "name": "getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)",
      "documentation": "Returns {@code null} by default or the value specified via {@link\n#setVoicemailRingtoneUri(PhoneAccountHandle, Uri)}.\n"
    },
    "hasCarrierPrivileges(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "subId"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 24,
      "name": "hasCarrierPrivileges(int)",
      "documentation": "@return False by default, unless set with {@link #setHasCarrierPrivileges(int, boolean)}.\n"
    },
    "initListener(android.telephony.PhoneStateListener,int)": {
      "isImplementation": false,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener",
        "flags"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "initListener(android.telephony.PhoneStateListener,int)"
    },
    "initTelephonyCallback(java.lang.Object)": {
      "isImplementation": false,
      "modifiers": [
        "protected"
      ],
      "params": [
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "initTelephonyCallback(java.lang.Object)"
    },
    "isDataConnectionAllowed()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 30,
      "name": "isDataConnectionAllowed()"
    },
    "isDataEnabled()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 26,
      "name": "isDataEnabled()",
      "documentation": "Implementation for {@link TelephonyManager#isDataEnabled}.\n\n@return False by default, unless set with {@link TelephonyManager#setDataEnabled}.\n"
    },
    "isDataEnabledForReason(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "reason"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 31,
      "name": "isDataEnabledForReason(int)",
      "documentation": "Implementation for {@link TelephonyManager#isDataEnabledForReason}.\n\n@return True by default, unless reason is set to false with {@link\n    TelephonyManager#setDataEnabledForReason}.\n"
    },
    "isEmergencyNumber(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "number"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 29,
      "name": "isEmergencyNumber(java.lang.String)",
      "documentation": "Cribbed from {@link android.telephony.PhoneNumberUtils#isEmergencyNumberInternal}.\n\n\u003cp\u003eTODO: need better implementation\n"
    },
    "isHearingAidCompatibilitySupported()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 23,
      "name": "isHearingAidCompatibilitySupported()",
      "documentation": "Implementation for {@link TelephonyManager#isHearingAidCompatibilitySupported()}.\n\n@return False by default, unless set with {@link\n    #setHearingAidCompatibilitySupported(boolean)}.\n"
    },
    "isNetworkRoaming()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isNetworkRoaming()",
      "documentation": "Returns {@code false} by default or the value specified via {@link\n#setIsNetworkRoaming(boolean)}\n"
    },
    "isPotentialEmergencyNumber(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "number"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 29,
      "name": "isPotentialEmergencyNumber(java.lang.String)"
    },
    "isRttSupported()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 29,
      "name": "isRttSupported()",
      "documentation": "Implementation for {@link TelephonyManager#isRttSupported}.\n\n@return False by default, unless set with {@link #setRttSupported(boolean)}.\n"
    },
    "isSmsCapable()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isSmsCapable()",
      "documentation": "@return true by default, or the value specified via {@link #setIsSmsCapable(boolean)}\n"
    },
    "isTtyModeSupported()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 23,
      "name": "isTtyModeSupported()",
      "documentation": "Implementation for {@link TelephonyManager#isTtyModeSupported}.\n\n@return False by default, unless set with {@link #setTtyModeSupported(boolean)}.\n"
    },
    "isVoiceCapable()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 22,
      "name": "isVoiceCapable()",
      "documentation": "Returns {@code true} by default or the value specified via {@link #setVoiceCapable(boolean)}.\n"
    },
    "isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "handle"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 24,
      "name": "isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)",
      "documentation": "Returns {@code null} by default or the value specified via {@link\n#setVoicemailVibrationEnabled(PhoneAccountHandle, boolean)}.\n"
    },
    "listen(android.telephony.PhoneStateListener,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener",
        "flags"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "listen(android.telephony.PhoneStateListener,int)"
    },
    "registerTelephonyCallback(java.lang.Object,java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "executor",
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 31,
      "name": "registerTelephonyCallback(java.lang.Object,java.lang.Object)"
    },
    "registerTelephonyCallback(java.lang.Object,java.lang.Object,java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "includeLocationData",
        "executor",
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 33,
      "name": "registerTelephonyCallback(java.lang.Object,java.lang.Object,java.lang.Object)"
    },
    "requestCellInfoUpdate(java.lang.Object,java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "cellInfoExecutor",
        "cellInfoCallback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 29,
      "name": "requestCellInfoUpdate(java.lang.Object,java.lang.Object)",
      "documentation": "Returns the value set by {@link #setCallbackCellInfos}, defaulting to calling the real {@link\nTelephonyManager#NETWORK_TYPE_UNKNOWN} if it was never called.\n"
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()"
    },
    "resetSimCountryIsos()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "resetSimCountryIsos()",
      "documentation": "Clears {@code subId} to simCountryIso mapping and resets to default state. "
    },
    "resetSimStates()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "resetSimStates()",
      "documentation": "Clears {@code slotIndex} to state mapping and resets to default state. "
    },
    "sendDialerSpecialCode(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "inputCode"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "name": "sendDialerSpecialCode(java.lang.String)",
      "documentation": "Implementation for {@link TelephonyManager#sendDialerSpecialCode(String)}.\n\n@param inputCode special code to be sent.\n"
    },
    "sendVisualVoicemailSms(java.lang.String,int,java.lang.String,android.app.PendingIntent)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "number",
        "port",
        "text",
        "sentIntent"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "name": "sendVisualVoicemailSms(java.lang.String,int,java.lang.String,android.app.PendingIntent)"
    },
    "setActiveModemCount(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "activeModemCount"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setActiveModemCount(int)",
      "documentation": "Sets the value returned by {@link TelephonyManager#getActiveModemCount()}. "
    },
    "setAllCellInfo(java.util.List\u003candroid.telephony.CellInfo\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "allCellInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setAllCellInfo(java.util.List\u003candroid.telephony.CellInfo\u003e)"
    },
    "setCallComposerStatus(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "callComposerStatus"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 31,
      "name": "setCallComposerStatus(int)"
    },
    "setCallState(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "callState"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCallState(int)",
      "documentation": "Sets the current call state to the desired state and updates any listeners. "
    },
    "setCallState(int,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "callState",
        "incomingPhoneNumber"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCallState(int,java.lang.String)",
      "documentation": "Sets the current call state with the option to specify an incoming phone number for the\nCALL_STATE_RINGING state. The incoming phone number will be ignored for all other cases.\n"
    },
    "setCallbackCellInfos(java.util.List\u003candroid.telephony.CellInfo\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "callbackCellInfos"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCallbackCellInfos(java.util.List\u003candroid.telephony.CellInfo\u003e)",
      "documentation": "Sets the value to be returned by calls to {@link requestCellInfoUpdate}. Note that it does not\nset the value to be returned by calls to {@link getAllCellInfo}; for that, see {@link\nsetAllCellInfo}.\n"
    },
    "setCarrierConfig(android.os.PersistableBundle)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "carrierConfig"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCarrierConfig(android.os.PersistableBundle)",
      "documentation": "Sets the value returned by {@link TelephonyManager#getCarrierConfig()}.\n\n@param carrierConfig\n"
    },
    "setCarrierIdFromSimMccMnc(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "carrierIdFromSimMccMnc"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCarrierIdFromSimMccMnc(int)",
      "documentation": "Sets the value to be returned by {@link #getCarrierIdFromSimMccMnc()}. "
    },
    "setCarrierPackageNamesForPhone(int,java.util.List\u003cjava.lang.String\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "phoneId",
        "packages"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCarrierPackageNamesForPhone(int,java.util.List\u003cjava.lang.String\u003e)",
      "documentation": "Sets the {@code packages} for the given {@code phoneId}. "
    },
    "setCellLocation(android.telephony.CellLocation)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "cellLocation"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCellLocation(android.telephony.CellLocation)"
    },
    "setCurrentPhoneType(int,int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "subId",
        "phoneType"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCurrentPhoneType(int,int)",
      "documentation": "Sets the phone type for the given {@code subId}. "
    },
    "setDataActivity(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "dataActivity"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDataActivity(int)",
      "documentation": "Sets the value to be returned by calls to {@link #getDataActivity()}. This \u003cb\u003eshould\u003c/b\u003e\ncorrespond to one of the {@code DATA_ACTIVITY_*} constants defined on {@link TelephonyManager},\nbut this is not enforced.\n"
    },
    "setDataEnabled(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "enabled"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "name": "setDataEnabled(boolean)",
      "documentation": "Implementation for {@link TelephonyManager#setDataEnabled}. Marked as public in order to allow\nit to be used as a test API.\n"
    },
    "setDataEnabledForReason(int,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "reason",
        "enabled"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 31,
      "name": "setDataEnabledForReason(int,boolean)",
      "documentation": "Implementation for {@link TelephonyManager#setDataEnabledForReason}. Marked as public in order\nto allow it to be used as a test API.\n"
    },
    "setDataNetworkType(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "dataNetworkType"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 22,
      "name": "setDataNetworkType(int)",
      "documentation": "Sets the value to be returned by calls to {@link #getDataNetworkType}. This \u003cb\u003eshould\u003c/b\u003e\ncorrespond to one of the {@code NETWORK_TYPE_*} constants defined on {@link TelephonyManager},\nbut this is not enforced.\n"
    },
    "setDataState(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "dataState"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDataState(int)",
      "documentation": "Sets the data state returned by {@link #getDataState()}. "
    },
    "setDeviceId(int,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "slot",
        "deviceId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDeviceId(int,java.lang.String)",
      "documentation": "Sets the value returned by {@link TelephonyManager#getDeviceId(int)}. "
    },
    "setDeviceId(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "newDeviceId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDeviceId(java.lang.String)"
    },
    "setDeviceSoftwareVersion(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "newDeviceSoftwareVersion"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDeviceSoftwareVersion(java.lang.String)"
    },
    "setEmergencyCallbackMode(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "emergencyCallbackMode"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setEmergencyCallbackMode(boolean)",
      "documentation": "Emergency Callback Mode (ECBM) is typically set by the carrier, for a time window of 5 minutes\nafter the last outgoing emergency call. The user can exit ECBM via a system notification.\n\n@param emergencyCallbackMode whether the device is in ECBM or not.\n"
    },
    "setEmergencyNumberList(java.util.Map\u003cjava.lang.Integer,java.util.List\u003candroid.telephony.emergency.EmergencyNumber\u003e\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "emergencyNumbersList"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setEmergencyNumberList(java.util.Map\u003cjava.lang.Integer,java.util.List\u003candroid.telephony.emergency.EmergencyNumber\u003e\u003e)",
      "documentation": "Sets the emergency numbers list returned by {@link TelephonyManager#getEmergencyNumberList}.\n"
    },
    "setGroupIdLevel1(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "groupIdLevel1"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setGroupIdLevel1(java.lang.String)"
    },
    "setHasCarrierPrivileges(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "hasCarrierPrivileges"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setHasCarrierPrivileges(boolean)"
    },
    "setHasCarrierPrivileges(int,boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "subId",
        "hasCarrierPrivileges"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setHasCarrierPrivileges(int,boolean)",
      "documentation": "Sets the {@code hasCarrierPrivileges} for the given {@code subId}. "
    },
    "setHearingAidCompatibilitySupported(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isSupported"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setHearingAidCompatibilitySupported(boolean)",
      "documentation": "Sets the value to be returned by {@link #isHearingAidCompatibilitySupported()}. "
    },
    "setImei(int,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "slotIndex",
        "imei"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setImei(int,java.lang.String)",
      "documentation": "Set the IMEI returned by {@link #getImei(int)}. "
    },
    "setImei(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "imei"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setImei(java.lang.String)",
      "documentation": "Set the IMEI returned by getImei(). "
    },
    "setIsDataConnectionAllowed(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isDataConnectionAllowed"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsDataConnectionAllowed(boolean)"
    },
    "setIsNetworkRoaming(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isNetworkRoaming"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsNetworkRoaming(boolean)",
      "documentation": "Sets the value returned by {@link TelephonyManager#isNetworkRoaming()}. "
    },
    "setIsSmsCapable(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isSmsCapable"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsSmsCapable(boolean)",
      "documentation": "Sets the value returned by {@link TelephonyManager#isSmsCapable()}. "
    },
    "setLine1Number(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "line1Number"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setLine1Number(java.lang.String)"
    },
    "setMeid(int,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "slotIndex",
        "meid"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setMeid(int,java.lang.String)",
      "documentation": "Set the MEID returned by {@link #getMeid(int)}. "
    },
    "setMeid(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "meid"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setMeid(java.lang.String)",
      "documentation": "Set the MEID returned by getMeid(). "
    },
    "setNetworkCountryIso(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "networkCountryIso"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 22,
      "maxSdk": 28,
      "name": "setNetworkCountryIso(java.lang.String)"
    },
    "setNetworkOperator(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "networkOperator"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setNetworkOperator(java.lang.String)"
    },
    "setNetworkOperatorName(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "networkOperatorName"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 22,
      "maxSdk": 34,
      "name": "setNetworkOperatorName(java.lang.String)"
    },
    "setNetworkOperatorNameForPhone(int,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "phoneId",
        "networkOperatorName"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 35,
      "name": "setNetworkOperatorNameForPhone(int,java.lang.String)"
    },
    "setNetworkSpecifier(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "networkSpecifier"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setNetworkSpecifier(java.lang.String)"
    },
    "setNetworkType(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "networkType"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setNetworkType(int)",
      "documentation": "@deprecated {@link TelephonyManager#getNetworkType()} was replaced with {@link\n    TelephonyManager#getDataNetworkType()} in Android N, and has been deprecated in Android R.\n    Use {@link #setDataNetworkType instead}.\n"
    },
    "setPhoneAccountHandleSubscriptionId(android.telecom.PhoneAccountHandle,int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "handle",
        "subscriptionId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setPhoneAccountHandleSubscriptionId(android.telecom.PhoneAccountHandle,int)"
    },
    "setPhoneCapability(java.lang.Object)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "phoneCapability"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setPhoneCapability(java.lang.Object)"
    },
    "setPhoneCount(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "phoneCount"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setPhoneCount(int)",
      "documentation": "Sets the value returned by {@link TelephonyManager#getPhoneCount()}. "
    },
    "setPhoneType(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "phoneType"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 22,
      "maxSdk": 34,
      "name": "setPhoneType(int)"
    },
    "setPhoneType(int,int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "phoneId",
        "type"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 35,
      "name": "setPhoneType(int,int)"
    },
    "setReadPhoneStatePermission(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "readPhoneStatePermission"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setReadPhoneStatePermission(boolean)"
    },
    "setRequestCellInfoUpdateErrorValues(int,java.lang.Throwable)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "errorCode",
        "detail"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setRequestCellInfoUpdateErrorValues(int,java.lang.Throwable)",
      "documentation": "Sets the values to be returned by a presumed error condition in {@link requestCellInfoUpdate}.\nThese values will persist until cleared: to clear, set (0, null) using this method.\n"
    },
    "setRttSupported(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isRttSupported"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setRttSupported(boolean)",
      "documentation": "Sets the value to be returned by {@link #isRttSupported()} "
    },
    "setServiceState(android.telephony.ServiceState)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "serviceState"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setServiceState(android.telephony.ServiceState)",
      "documentation": "Sets the value returned by {@link TelephonyManager#getServiceState()}. "
    },
    "setSignalStrength(android.telephony.SignalStrength)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "signalStrength"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSignalStrength(android.telephony.SignalStrength)",
      "documentation": "Sets the value to be returned by {@link #getSignalStrength()} "
    },
    "setSimCarrierId(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "simCarrierId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSimCarrierId(int)",
      "documentation": "Sets the value to be returned by {@link #getSimCarrierId()}. "
    },
    "setSimCountryIso(int,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "subId",
        "simCountryIso"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSimCountryIso(int,java.lang.String)",
      "documentation": "Sets the {@code simCountryIso} for the given {@code subId}. "
    },
    "setSimCountryIso(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "simCountryIso"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 22,
      "name": "setSimCountryIso(java.lang.String)"
    },
    "setSimLocale(java.util.Locale)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "simLocale"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSimLocale(java.util.Locale)",
      "documentation": "Sets the sim locale returned by {@link #getSimLocale()}. "
    },
    "setSimOperator(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "simOperator"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSimOperator(java.lang.String)"
    },
    "setSimOperatorName(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "simOperatorName"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 22,
      "maxSdk": 34,
      "name": "setSimOperatorName(java.lang.String)"
    },
    "setSimOperatorNameForPhone(int,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "phoneId",
        "name"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 35,
      "name": "setSimOperatorNameForPhone(int,java.lang.String)"
    },
    "setSimSerialNumber(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "simSerialNumber"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSimSerialNumber(java.lang.String)",
      "documentation": "sets the serial number that will be returned by {@link #getSimSerialNumber}. "
    },
    "setSimState(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "simState"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSimState(int)",
      "documentation": "Sets the sim state of slot 0. "
    },
    "setSimState(int,int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "slotIndex",
        "state"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSimState(int,int)",
      "documentation": "Set the sim state for the given {@code slotIndex}. "
    },
    "setSubscriberId(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "subscriberId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSubscriberId(java.lang.String)",
      "documentation": "Sets the value to be returned by {@link #getSubscriberId()}. "
    },
    "setTelephonyDisplayInfo(java.lang.Object)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "telephonyDisplayInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setTelephonyDisplayInfo(java.lang.Object)",
      "documentation": "Sets the current {@link TelephonyDisplayInfo}, and notifies all the {@link PhoneStateListener}s\nthat were registered with the {@link PhoneStateListener#LISTEN_DISPLAY_INFO_CHANGED} flag.\n\n@param telephonyDisplayInfo The {@link TelephonyDisplayInfo} to set. May not be null.\n@throws NullPointerException if telephonyDisplayInfo is null.\n"
    },
    "setTelephonyManagerForHandle(android.telecom.PhoneAccountHandle,android.telephony.TelephonyManager)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "handle",
        "telephonyManager"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setTelephonyManagerForHandle(android.telecom.PhoneAccountHandle,android.telephony.TelephonyManager)",
      "documentation": "Sets the value returned by {@link\nTelephonyManager#createForPhoneAccountHandle(PhoneAccountHandle)}.\n"
    },
    "setTelephonyManagerForSubscriptionId(int,android.telephony.TelephonyManager)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "subscriptionId",
        "telephonyManager"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setTelephonyManagerForSubscriptionId(int,android.telephony.TelephonyManager)",
      "documentation": "Sets the value returned by {@link TelephonyManager#createForSubscriptionId(int)}. "
    },
    "setTtyModeSupported(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isTtyModeSupported"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setTtyModeSupported(boolean)",
      "documentation": "Sets the value to be returned by {@link #isTtyModeSupported()} "
    },
    "setUiccCardsInfo(java.lang.Object)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "uiccCardsInfo"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setUiccCardsInfo(java.lang.Object)",
      "documentation": "Sets the UICC cards information returned by {@link #getUiccCardsInfo()}. "
    },
    "setUiccSlotsInfo(java.lang.Object)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "uiccSlotsInfos"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setUiccSlotsInfo(java.lang.Object)",
      "documentation": "Sets the UICC slots information returned by {@link #getUiccSlotsInfo()}. "
    },
    "setVisualVoicemailPackageName(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "visualVoicemailPackageName"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setVisualVoicemailPackageName(java.lang.String)",
      "documentation": "Sets the value to be returned by {@link #getVisualVoicemailPackageName()}. "
    },
    "setVisualVoicemailSmsFilterSettings(android.telephony.VisualVoicemailSmsFilterSettings)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "settings"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "name": "setVisualVoicemailSmsFilterSettings(android.telephony.VisualVoicemailSmsFilterSettings)",
      "documentation": "Implementation for {@link\nTelephonyManager#setVisualVoicemailSmsFilterSettings(VisualVoicemailSmsFilterSettings)}.\n\n@param settings The settings for the filter, or null to disable the filter.\n"
    },
    "setVoiceCapable(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "voiceCapable"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setVoiceCapable(boolean)",
      "documentation": "Sets the value returned by {@link #isVoiceCapable()}. "
    },
    "setVoiceMailAlphaTag(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "voiceMailAlphaTag"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setVoiceMailAlphaTag(java.lang.String)",
      "documentation": "Sets the value returned by {@link TelephonyManager#getVoiceMailAlphaTag()}. "
    },
    "setVoiceMailNumber(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "voiceMailNumber"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setVoiceMailNumber(java.lang.String)",
      "documentation": "Sets the value returned by {@link TelephonyManager#getVoiceMailNumber()}. "
    },
    "setVoiceNetworkType(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "voiceNetworkType"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setVoiceNetworkType(int)",
      "documentation": "Sets the value to be returned by calls to {@link getVoiceNetworkType}. This \u003cb\u003eshould\u003c/b\u003e\ncorrespond to one of the {@code NETWORK_TYPE_*} constants defined on {@link TelephonyManager},\nbut this is not enforced.\n"
    },
    "setVoicemailRingtoneUri(android.telecom.PhoneAccountHandle,android.net.Uri)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "handle",
        "uri"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "name": "setVoicemailRingtoneUri(android.telecom.PhoneAccountHandle,android.net.Uri)",
      "documentation": "Sets the value returned by {@link\nTelephonyManager#getVoicemailRingtoneUri(PhoneAccountHandle)}.\n"
    },
    "setVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "handle",
        "isEnabled"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "name": "setVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle,boolean)",
      "documentation": "Sets the value returned by {@link\nTelephonyManager#isVoicemailVibrationEnabled(PhoneAccountHandle)}.\n"
    },
    "unregisterTelephonyCallback(java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 31,
      "name": "unregisterTelephonyCallback(java.lang.Object)"
    }
  },
  "imports": [
    "android.content.pm.PackageManager.PERMISSION_GRANTED",
    "android.os.Build.VERSION_CODES.JELLY_BEAN_MR1",
    "android.os.Build.VERSION_CODES.JELLY_BEAN_MR2",
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.LOLLIPOP_MR1",
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.N",
    "android.os.Build.VERSION_CODES.O",
    "android.os.Build.VERSION_CODES.P",
    "android.os.Build.VERSION_CODES.Q",
    "android.os.Build.VERSION_CODES.R",
    "android.os.Build.VERSION_CODES.S",
    "android.os.Build.VERSION_CODES.TIRAMISU",
    "android.telephony.PhoneStateListener.LISTEN_CALL_STATE",
    "android.telephony.PhoneStateListener.LISTEN_CELL_INFO",
    "android.telephony.PhoneStateListener.LISTEN_CELL_LOCATION",
    "android.telephony.PhoneStateListener.LISTEN_NONE",
    "android.telephony.PhoneStateListener.LISTEN_SERVICE_STATE",
    "android.telephony.TelephonyManager.CALL_STATE_IDLE",
    "android.telephony.TelephonyManager.CALL_STATE_RINGING",
    "android.Manifest.permission",
    "android.annotation.CallSuper",
    "android.app.ActivityThread",
    "android.app.PendingIntent",
    "android.content.Context",
    "android.content.Intent",
    "android.net.Uri",
    "android.os.Build",
    "android.os.Build.VERSION",
    "android.os.PersistableBundle",
    "android.os.SystemProperties",
    "android.telecom.PhoneAccountHandle",
    "android.telephony.Annotation.NetworkType",
    "android.telephony.Annotation.OverrideNetworkType",
    "android.telephony.CellInfo",
    "android.telephony.CellLocation",
    "android.telephony.PhoneStateListener",
    "android.telephony.ServiceState",
    "android.telephony.SignalStrength",
    "android.telephony.SubscriptionManager",
    "android.telephony.TelephonyCallback",
    "android.telephony.TelephonyCallback.CallStateListener",
    "android.telephony.TelephonyCallback.CellInfoListener",
    "android.telephony.TelephonyCallback.CellLocationListener",
    "android.telephony.TelephonyCallback.DisplayInfoListener",
    "android.telephony.TelephonyCallback.ServiceStateListener",
    "android.telephony.TelephonyCallback.SignalStrengthsListener",
    "android.telephony.TelephonyDisplayInfo",
    "android.telephony.TelephonyManager",
    "android.telephony.TelephonyManager.CellInfoCallback",
    "android.telephony.VisualVoicemailSmsFilterSettings",
    "android.telephony.emergency.EmergencyNumber",
    "android.text.TextUtils",
    "android.util.SparseArray",
    "android.util.SparseBooleanArray",
    "android.util.SparseIntArray",
    "com.google.common.base.Ascii",
    "com.google.common.base.Preconditions",
    "com.google.common.base.Predicate",
    "com.google.common.collect.ImmutableList",
    "com.google.common.collect.ImmutableMap",
    "com.google.common.collect.Iterables",
    "java.util.ArrayList",
    "java.util.Collections",
    "java.util.HashMap",
    "java.util.HashSet",
    "java.util.List",
    "java.util.Locale",
    "java.util.Map",
    "java.util.Set",
    "java.util.concurrent.Executor",
    "org.robolectric.RuntimeEnvironment",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.annotation.Resetter",
    "org.robolectric.shadow.api.Shadow",
    "org.robolectric.util.ReflectionHelpers",
    "org.robolectric.versioning.AndroidVersions.U",
    "org.robolectric.versioning.AndroidVersions.V",
    "org.robolectric.shadows.ShadowTelephonyManager.VisualVoicemailSmsParams"
  ],
  "name": "org.robolectric.shadows.ShadowTelephonyManager"
}