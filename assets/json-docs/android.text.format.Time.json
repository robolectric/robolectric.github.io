{
  "methods": {
    "__constructor__()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "__constructor__()"
    },
    "__constructor__(android.text.format.Time)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "other"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "__constructor__(android.text.format.Time)"
    },
    "__constructor__(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "timezone"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "__constructor__(java.lang.String)"
    },
    "after(android.text.format.Time)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "other"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "maxSdk": 20,
      "name": "after(android.text.format.Time)"
    },
    "before(android.text.format.Time)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "other"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "maxSdk": 20,
      "name": "before(android.text.format.Time)"
    },
    "checkChar(java.lang.String,int,char)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "s",
        "spos",
        "expected"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "checkChar(java.lang.String,int,char)"
    },
    "clear(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "timezone"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "clear(java.lang.String)"
    },
    "compare(android.text.format.Time,android.text.format.Time)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "a",
        "b"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 20,
      "name": "compare(android.text.format.Time,android.text.format.Time)"
    },
    "format(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "format"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "maxSdk": 20,
      "name": "format(java.lang.String)"
    },
    "format2445()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "maxSdk": 20,
      "name": "format2445()"
    },
    "format3339(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "allDay"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "maxSdk": 20,
      "name": "format3339(boolean)"
    },
    "getCalendar()": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [],
      "returnType": "java.util.Calendar",
      "exceptions": [],
      "name": "getCalendar()"
    },
    "getChar(java.lang.String,int,int)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "s",
        "spos",
        "mul"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "getChar(java.lang.String,int,int)"
    },
    "getCurrentTimezone()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "maxSdk": 20,
      "name": "getCurrentTimezone()"
    },
    "getJulianDay(long,long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "millis",
        "gmtoff"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 20,
      "name": "getJulianDay(long,long)"
    },
    "isEpoch(android.text.format.Time)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "time"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "maxSdk": 20,
      "name": "isEpoch(android.text.format.Time)"
    },
    "nativeParse3339(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "s"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "maxSdk": 20,
      "name": "nativeParse3339(java.lang.String)"
    },
    "parse(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "timeString"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "maxSdk": 20,
      "name": "parse(java.lang.String)"
    },
    "set(android.text.format.Time)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "other"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "set(android.text.format.Time)"
    },
    "set(int,int,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "monthDay",
        "month",
        "year"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "set(int,int,int)"
    },
    "set(int,int,int,int,int,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "second",
        "minute",
        "hour",
        "monthDay",
        "month",
        "year"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "set(int,int,int,int,int,int)"
    },
    "set(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "millis"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "set(long)"
    },
    "setJulianDay(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "julianDay"
      ],
      "returnType": "long",
      "exceptions": [],
      "maxSdk": 20,
      "name": "setJulianDay(int)"
    },
    "setToNow()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "setToNow()"
    },
    "switchTimezone(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "timezone"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "switchTimezone(java.lang.String)"
    },
    "throwTimeFormatException(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "optionalMessage"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "throwTimeFormatException(java.lang.String)"
    },
    "toMillis(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "ignoreDst"
      ],
      "returnType": "long",
      "exceptions": [],
      "maxSdk": 20,
      "name": "toMillis(boolean)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.KITKAT_WATCH",
    "org.robolectric.util.ReflectionHelpers.ClassParameter.from",
    "android.os.SystemClock",
    "android.text.format.Time",
    "android.util.TimeFormatException",
    "java.text.ParseException",
    "java.text.SimpleDateFormat",
    "java.util.Calendar",
    "java.util.Date",
    "java.util.Locale",
    "java.util.TimeZone",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.util.ReflectionHelpers",
    "org.robolectric.util.Strftime"
  ],
  "name": "org.robolectric.shadows.ShadowTime"
}