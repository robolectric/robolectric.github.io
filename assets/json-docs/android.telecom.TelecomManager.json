{
  "methods": {
    "acceptRingingCall()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "acceptRingingCall()"
    },
    "addNewIncomingCall(android.telecom.PhoneAccountHandle,android.os.Bundle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "phoneAccount",
        "extras"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addNewIncomingCall(android.telecom.PhoneAccountHandle,android.os.Bundle)"
    },
    "addNewUnknownCall(android.telecom.PhoneAccountHandle,android.os.Bundle)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "phoneAccount",
        "extras"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addNewUnknownCall(android.telecom.PhoneAccountHandle,android.os.Bundle)"
    },
    "allowIncomingCall(org.robolectric.shadows.ShadowTelecomManager.IncomingCallRecord)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "call"
      ],
      "returnType": "android.telecom.Connection",
      "exceptions": [],
      "name": "allowIncomingCall(org.robolectric.shadows.ShadowTelecomManager.IncomingCallRecord)",
      "documentation": "Allows an {@link IncomingCallRecord} created via {@link TelecomManager#addNewIncomingCall}.\n\n\u003cp\u003eSpecifically, this method sets up the relevant {@link ConnectionService} and returns the\nresult of {@link ConnectionService#onCreateIncomingConnection}.\n"
    },
    "allowOutgoingCall(org.robolectric.shadows.ShadowTelecomManager.OutgoingCallRecord)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "call"
      ],
      "returnType": "android.telecom.Connection",
      "exceptions": [],
      "name": "allowOutgoingCall(org.robolectric.shadows.ShadowTelecomManager.OutgoingCallRecord)",
      "documentation": "Allows an {@link OutgoingCallRecord} created via {@link TelecomManager#placeCall}.\n\n\u003cp\u003eSpecifically, this method sets up the relevant {@link ConnectionService} and returns the\nresult of {@link ConnectionService#onCreateOutgoingConnection}.\n"
    },
    "buildConnectionRequestForIncomingCall(org.robolectric.shadows.ShadowTelecomManager.IncomingCallRecord)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "call"
      ],
      "returnType": "android.telecom.ConnectionRequest",
      "exceptions": [],
      "name": "buildConnectionRequestForIncomingCall(org.robolectric.shadows.ShadowTelecomManager.IncomingCallRecord)"
    },
    "buildConnectionRequestForOutgoingCall(org.robolectric.shadows.ShadowTelecomManager.OutgoingCallRecord)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "call"
      ],
      "returnType": "android.telecom.ConnectionRequest",
      "exceptions": [],
      "name": "buildConnectionRequestForOutgoingCall(org.robolectric.shadows.ShadowTelecomManager.OutgoingCallRecord)"
    },
    "cancelMissedCallsNotification()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "cancelMissedCallsNotification()"
    },
    "checkCallPhonePermission()": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "checkCallPhonePermission()"
    },
    "checkReadPhoneStatePermission()": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "checkReadPhoneStatePermission()"
    },
    "clearAccounts()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "clearAccounts()",
      "documentation": "@deprecated "
    },
    "clearAccountsForPackage(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "packageName"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 22,
      "name": "clearAccountsForPackage(java.lang.String)"
    },
    "createLaunchEmergencyDialerIntent(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "number"
      ],
      "returnType": "android.content.Intent",
      "exceptions": [],
      "minSdk": 30,
      "name": "createLaunchEmergencyDialerIntent(java.lang.String)"
    },
    "createManageBlockedNumbersIntent()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "android.content.Intent",
      "exceptions": [],
      "minSdk": 24,
      "name": "createManageBlockedNumbersIntent()",
      "documentation": "Returns the intent set by {@link ShadowTelecomManager#setManageBlockNumbersIntent(Intent)} ()}\n"
    },
    "denyIncomingCall(org.robolectric.shadows.ShadowTelecomManager.IncomingCallRecord)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "call"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "denyIncomingCall(org.robolectric.shadows.ShadowTelecomManager.IncomingCallRecord)",
      "documentation": "Denies an {@link IncomingCallRecord} created via {@link TelecomManager#addNewIncomingCall}.\n\n\u003cp\u003eSpecifically, this method sets up the relevant {@link ConnectionService} and calls {@link\nConnectionService#onCreateIncomingConnectionFailed}.\n"
    },
    "denyOutgoingCall(org.robolectric.shadows.ShadowTelecomManager.OutgoingCallRecord)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "call"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "denyOutgoingCall(org.robolectric.shadows.ShadowTelecomManager.OutgoingCallRecord)",
      "documentation": "Denies an {@link OutgoingCallRecord} created via {@link TelecomManager#placeCall}.\n\n\u003cp\u003eSpecifically, this method sets up the relevant {@link ConnectionService} and calls {@link\nConnectionService#onCreateOutgoingConnectionFailed}.\n"
    },
    "enablePhoneAccount(android.telecom.PhoneAccountHandle,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "handle",
        "isEnabled"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 23,
      "name": "enablePhoneAccount(android.telecom.PhoneAccountHandle,boolean)"
    },
    "endCall()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "endCall()"
    },
    "getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "accountHandle"
      ],
      "returnType": "android.net.Uri",
      "exceptions": [],
      "minSdk": 22,
      "name": "getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle)"
    },
    "getAllIncomingCalls()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003corg.robolectric.shadows.ShadowTelecomManager.IncomingCallRecord\u003e",
      "exceptions": [],
      "name": "getAllIncomingCalls()"
    },
    "getAllOutgoingCalls()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003corg.robolectric.shadows.ShadowTelecomManager.OutgoingCallRecord\u003e",
      "exceptions": [],
      "name": "getAllOutgoingCalls()"
    },
    "getAllPhoneAccountHandles()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.telecom.PhoneAccountHandle\u003e",
      "exceptions": [],
      "name": "getAllPhoneAccountHandles()"
    },
    "getAllPhoneAccounts()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.telecom.PhoneAccount\u003e",
      "exceptions": [],
      "name": "getAllPhoneAccounts()"
    },
    "getAllPhoneAccountsCount()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getAllPhoneAccountsCount()"
    },
    "getAllUnknownCalls()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003corg.robolectric.shadows.ShadowTelecomManager.UnknownCallRecord\u003e",
      "exceptions": [],
      "name": "getAllUnknownCalls()"
    },
    "getCallCapablePhoneAccounts()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.telecom.PhoneAccountHandle\u003e",
      "exceptions": [],
      "minSdk": 23,
      "name": "getCallCapablePhoneAccounts()"
    },
    "getCallCapablePhoneAccounts(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "includeDisabledAccounts"
      ],
      "returnType": "java.util.List\u003candroid.telecom.PhoneAccountHandle\u003e",
      "exceptions": [],
      "minSdk": 23,
      "name": "getCallCapablePhoneAccounts(boolean)"
    },
    "getCallRequestMode()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowTelecomManager.CallRequestMode",
      "exceptions": [],
      "name": "getCallRequestMode()"
    },
    "getCallState()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getCallState()"
    },
    "getConnectionManager()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.telecom.PhoneAccountHandle",
      "exceptions": [],
      "name": "getConnectionManager()"
    },
    "getConnectionService(android.telecom.PhoneAccountHandle)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "phoneAccount"
      ],
      "returnType": "android.telecom.ConnectionService",
      "exceptions": [],
      "name": "getConnectionService(android.telecom.PhoneAccountHandle)"
    },
    "getCurrentTtyMode()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getCurrentTtyMode()"
    },
    "getDefaultDialerPackage()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 23,
      "name": "getDefaultDialerPackage()"
    },
    "getDefaultOutgoingPhoneAccount(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "uriScheme"
      ],
      "returnType": "android.telecom.PhoneAccountHandle",
      "exceptions": [],
      "name": "getDefaultOutgoingPhoneAccount(java.lang.String)",
      "documentation": "Returns default outgoing phone account set through {@link\n#setDefaultOutgoingPhoneAccount(String, PhoneAccountHandle)} for corresponding {@code\nuriScheme}.\n"
    },
    "getDefaultPhoneApp()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.content.ComponentName",
      "exceptions": [],
      "name": "getDefaultPhoneApp()",
      "documentation": "@deprecated "
    },
    "getLastIncomingCall()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowTelecomManager.IncomingCallRecord",
      "exceptions": [],
      "name": "getLastIncomingCall()"
    },
    "getLastOutgoingCall()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowTelecomManager.OutgoingCallRecord",
      "exceptions": [],
      "name": "getLastOutgoingCall()"
    },
    "getLastUnknownCall()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowTelecomManager.UnknownCallRecord",
      "exceptions": [],
      "name": "getLastUnknownCall()"
    },
    "getLine1Number(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "accountHandle"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 22,
      "name": "getLine1Number(android.telecom.PhoneAccountHandle)"
    },
    "getOnlyIncomingCall()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowTelecomManager.IncomingCallRecord",
      "exceptions": [],
      "name": "getOnlyIncomingCall()"
    },
    "getOnlyOutgoingCall()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowTelecomManager.OutgoingCallRecord",
      "exceptions": [],
      "name": "getOnlyOutgoingCall()"
    },
    "getOnlyUnknownCall()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "org.robolectric.shadows.ShadowTelecomManager.UnknownCallRecord",
      "exceptions": [],
      "name": "getOnlyUnknownCall()"
    },
    "getPhoneAccount(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "account"
      ],
      "returnType": "android.telecom.PhoneAccount",
      "exceptions": [],
      "name": "getPhoneAccount(android.telecom.PhoneAccountHandle)"
    },
    "getPhoneAccountsForPackage()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.telecom.PhoneAccountHandle\u003e",
      "exceptions": [],
      "name": "getPhoneAccountsForPackage()"
    },
    "getPhoneAccountsSupportingScheme(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "uriScheme"
      ],
      "returnType": "java.util.List\u003candroid.telecom.PhoneAccountHandle\u003e",
      "exceptions": [],
      "name": "getPhoneAccountsSupportingScheme(java.lang.String)"
    },
    "getSelfManagedPhoneAccounts()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.telecom.PhoneAccountHandle\u003e",
      "exceptions": [],
      "minSdk": 26,
      "name": "getSelfManagedPhoneAccounts()"
    },
    "getSimCallManager()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "android.telecom.PhoneAccountHandle",
      "exceptions": [],
      "name": "getSimCallManager()"
    },
    "getSimCallManager(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "userId"
      ],
      "returnType": "android.telecom.PhoneAccountHandle",
      "exceptions": [],
      "minSdk": 23,
      "name": "getSimCallManager(int)"
    },
    "getSystemDialerPackage()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 23,
      "name": "getSystemDialerPackage()"
    },
    "getUserSelectedOutgoingPhoneAccount()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.telecom.PhoneAccountHandle",
      "exceptions": [],
      "name": "getUserSelectedOutgoingPhoneAccount()"
    },
    "getVoiceMailNumber(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "accountHandle"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 23,
      "name": "getVoiceMailNumber(android.telecom.PhoneAccountHandle)"
    },
    "handleMmi(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "dialString"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "handleMmi(java.lang.String)"
    },
    "handleMmi(java.lang.String,android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "dialString",
        "accountHandle"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 23,
      "name": "handleMmi(java.lang.String,android.telecom.PhoneAccountHandle)"
    },
    "isInCall()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isInCall()",
      "documentation": "Overrides behavior of {@link TelecomManager#isInCall} to return pre-set result.\n\n@return Value set by calling {@link ShadowTelecomManager#setIsInCall}. If setIsInCall has not\n    previously been called, will return false.\n"
    },
    "isRinging()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isRinging()"
    },
    "isTtySupported()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isTtySupported()"
    },
    "isVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "accountHandle",
        "number"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 23,
      "name": "isVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String)"
    },
    "newCallAudioState(boolean,int,int,android.bluetooth.BluetoothDevice,java.util.Collection\u003candroid.bluetooth.BluetoothDevice\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "muted",
        "route",
        "supportedRouteMask",
        "activeBluetoothDevice",
        "supportedBluetoothDevices"
      ],
      "returnType": "android.telecom.CallAudioState",
      "exceptions": [],
      "name": "newCallAudioState(boolean,int,int,android.bluetooth.BluetoothDevice,java.util.Collection\u003candroid.bluetooth.BluetoothDevice\u003e)",
      "documentation": "Creates a new {@link CallAudioState}. The real constructor of {@link CallAudioState} is hidden.\n"
    },
    "placeCall(android.net.Uri,android.os.Bundle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "address",
        "extras"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 23,
      "name": "placeCall(android.net.Uri,android.os.Bundle)"
    },
    "registerPhoneAccount(android.telecom.PhoneAccount)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "account"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "registerPhoneAccount(android.telecom.PhoneAccount)"
    },
    "removeDefaultOutgoingPhoneAccount(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "uriScheme"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "removeDefaultOutgoingPhoneAccount(java.lang.String)",
      "documentation": "Remove default outgoing phone account for corresponding {@code uriScheme}. "
    },
    "setCallPhonePermission(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "callPhonePermission"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCallPhonePermission(boolean)",
      "documentation": "When set to false methods requiring {@link android.Manifest.permission.CALL_PHONE} permission\nwill throw a {@link SecurityException}. By default it\u0027s set to true for backwards\ncompatibility.\n"
    },
    "setCallRequestMode(org.robolectric.shadows.ShadowTelecomManager.CallRequestMode)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "callRequestMode"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCallRequestMode(org.robolectric.shadows.ShadowTelecomManager.CallRequestMode)"
    },
    "setConnectionService(android.telecom.ConnectionService)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "service"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setConnectionService(android.telecom.ConnectionService)",
      "documentation": "Set connection service.\n\u003cp\u003e\nThis method can be used in case, when you already created connection service\nand would like to use it in telecom manager instead of creating new one.\n\n@param service existing connection service\n"
    },
    "setDefaultDialer(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "packageName"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 23,
      "name": "setDefaultDialer(java.lang.String)",
      "documentation": "@deprecated API deprecated since Q, for testing, use setDefaultDialerPackage instead "
    },
    "setDefaultDialerPackage(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "packageName"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDefaultDialerPackage(java.lang.String)",
      "documentation": "Set returned value of {@link #getDefaultDialerPackage()}. "
    },
    "setDefaultOutgoingPhoneAccount(java.lang.String,android.telecom.PhoneAccountHandle)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "uriScheme",
        "handle"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDefaultOutgoingPhoneAccount(java.lang.String,android.telecom.PhoneAccountHandle)",
      "documentation": "Set default outgoing phone account to be returned from {@link\n#getDefaultOutgoingPhoneAccount(String)} for corresponding {@code uriScheme}.\n"
    },
    "setHandleMmiValue(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "handleMmiValue"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setHandleMmiValue(boolean)"
    },
    "setIsInCall(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isInCall"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsInCall(boolean)",
      "documentation": "Sets the return value for {@link TelecomManager#isInCall}. "
    },
    "setLine1Number(android.telecom.PhoneAccountHandle,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "accountHandle",
        "number"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setLine1Number(android.telecom.PhoneAccountHandle,java.lang.String)"
    },
    "setManageBlockNumbersIntent(android.content.Intent)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "intent"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setManageBlockNumbersIntent(android.content.Intent)",
      "documentation": "Sets the BlockNumbersIntent to be returned by {@link\nShadowTelecomManager#createManageBlockedNumbersIntent()}\n"
    },
    "setReadPhoneStatePermission(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "readPhoneStatePermission"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setReadPhoneStatePermission(boolean)",
      "documentation": "When set to false methods requiring {@link android.Manifest.permission.READ_PHONE_STATE}\npermission will throw a {@link SecurityException}. By default it\u0027s set to true for backwards\ncompatibility.\n"
    },
    "setSimCallManager(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "simCallManager"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 22,
      "name": "setSimCallManager(android.telecom.PhoneAccountHandle)"
    },
    "setSystemDialerPackage(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "packageName"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSystemDialerPackage(java.lang.String)",
      "documentation": "Set returned value of {@link #getSystemDialerPackage()}. "
    },
    "setTtySupported(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isSupported"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setTtySupported(boolean)",
      "documentation": "Sets the value to be returned by {@link #isTtySupported()}. "
    },
    "setUserSelectedOutgoingPhoneAccount(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "accountHandle"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setUserSelectedOutgoingPhoneAccount(android.telecom.PhoneAccountHandle)"
    },
    "setVoicemailNumber(android.telecom.PhoneAccountHandle,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "accountHandle",
        "number"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setVoicemailNumber(android.telecom.PhoneAccountHandle,java.lang.String)"
    },
    "setupConnectionService(android.telecom.PhoneAccountHandle)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "phoneAccount"
      ],
      "returnType": "android.telecom.ConnectionService",
      "exceptions": [],
      "name": "setupConnectionService(android.telecom.PhoneAccountHandle)"
    },
    "showInCallScreen(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "showDialpad"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "showInCallScreen(boolean)"
    },
    "silenceRinger()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "silenceRinger()"
    },
    "unregisterPhoneAccount(android.telecom.PhoneAccountHandle)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "accountHandle"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "unregisterPhoneAccount(android.telecom.PhoneAccountHandle)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.LOLLIPOP_MR1",
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.N",
    "android.os.Build.VERSION_CODES.O",
    "android.os.Build.VERSION_CODES.R",
    "com.google.common.base.Preconditions.checkNotNull",
    "com.google.common.base.Verify.verifyNotNull",
    "android.annotation.SystemApi",
    "android.annotation.TargetApi",
    "android.bluetooth.BluetoothDevice",
    "android.content.ComponentName",
    "android.content.Context",
    "android.content.Intent",
    "android.content.pm.ResolveInfo",
    "android.net.Uri",
    "android.os.Bundle",
    "android.telecom.CallAudioState",
    "android.telecom.Connection",
    "android.telecom.ConnectionRequest",
    "android.telecom.ConnectionService",
    "android.telecom.PhoneAccount",
    "android.telecom.PhoneAccountHandle",
    "android.telecom.TelecomManager",
    "android.telecom.VideoProfile",
    "android.text.TextUtils",
    "android.util.ArrayMap",
    "androidx.annotation.Nullable",
    "com.google.common.collect.ImmutableList",
    "com.google.common.collect.Iterables",
    "java.util.ArrayList",
    "java.util.Collection",
    "java.util.HashSet",
    "java.util.LinkedHashMap",
    "java.util.List",
    "java.util.Map",
    "java.util.Set",
    "org.robolectric.android.controller.ServiceController",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.util.ReflectionHelpers",
    "org.robolectric.shadows.ShadowTelecomManager.CallRequestMode",
    "org.robolectric.shadows.ShadowTelecomManager.CallRecord",
    "org.robolectric.shadows.ShadowTelecomManager.IncomingCallRecord",
    "org.robolectric.shadows.ShadowTelecomManager.OutgoingCallRecord",
    "org.robolectric.shadows.ShadowTelecomManager.UnknownCallRecord"
  ],
  "name": "org.robolectric.shadows.ShadowTelecomManager"
}