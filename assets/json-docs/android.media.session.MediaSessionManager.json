{
  "methods": {
    "addController(android.media.session.MediaController)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "controller"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addController(android.media.session.MediaController)",
      "documentation": "Adds a {@link MediaController} that will be returned when calling {@link\n#getActiveSessions(ComponentName)}. This will trigger a callback on each {@link\nOnActiveSessionsChangedListener} callback registered with this class.\n\n@param controller The controller to add.\n"
    },
    "addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener",
        "ignoredNotificationListener"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName)"
    },
    "clearControllers()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "clearControllers()",
      "documentation": "Clears all controllers such that {@link #getActiveSessions(ComponentName)} will return the\nempty list.\n"
    },
    "getActiveSessions(android.content.ComponentName)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "ignoredNotificationListener"
      ],
      "returnType": "java.util.List\u003candroid.media.session.MediaController\u003e",
      "exceptions": [],
      "name": "getActiveSessions(android.content.ComponentName)"
    },
    "removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.content.ComponentName",
    "android.media.session.MediaController",
    "android.media.session.MediaSessionManager",
    "android.media.session.MediaSessionManager.OnActiveSessionsChangedListener",
    "com.google.common.collect.ImmutableList",
    "java.util.List",
    "java.util.Set",
    "java.util.concurrent.CopyOnWriteArrayList",
    "java.util.concurrent.CopyOnWriteArraySet",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements"
  ],
  "name": "org.robolectric.shadows.ShadowMediaSessionManager",
  "documentation": "Shadow for {@link MediaSessionManager}. "
}