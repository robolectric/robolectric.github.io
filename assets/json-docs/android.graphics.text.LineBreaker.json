{
  "methods": {
    "__staticInitializer__()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 35,
      "name": "__staticInitializer__()"
    },
    "nComputeLineBreaks(long,char[],long,int,float,int,float,float[],float,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "nativePtr",
        "text",
        "measuredTextPtr",
        "length",
        "firstWidth",
        "firstWidthLineCount",
        "restWidth",
        "variableTabStops",
        "defaultTabStop",
        "indentsOffset"
      ],
      "returnType": "long",
      "exceptions": [],
      "maxSdk": 34,
      "name": "nComputeLineBreaks(long,char[],long,int,float,int,float,float[],float,int)"
    },
    "nGetLineAscent(long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "ptr",
        "idx"
      ],
      "returnType": "float",
      "exceptions": [],
      "maxSdk": 34,
      "name": "nGetLineAscent(long,int)"
    },
    "nGetLineBreakOffset(long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "ptr",
        "idx"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 34,
      "name": "nGetLineBreakOffset(long,int)"
    },
    "nGetLineCount(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "ptr"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 34,
      "name": "nGetLineCount(long)"
    },
    "nGetLineDescent(long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "ptr",
        "idx"
      ],
      "returnType": "float",
      "exceptions": [],
      "maxSdk": 34,
      "name": "nGetLineDescent(long,int)"
    },
    "nGetLineFlag(long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "ptr",
        "idx"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 34,
      "name": "nGetLineFlag(long,int)"
    },
    "nGetLineWidth(long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "ptr",
        "idx"
      ],
      "returnType": "float",
      "exceptions": [],
      "maxSdk": 34,
      "name": "nGetLineWidth(long,int)"
    },
    "nGetReleaseFunc()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "long",
      "exceptions": [],
      "maxSdk": 34,
      "name": "nGetReleaseFunc()"
    },
    "nGetReleaseResultFunc()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "long",
      "exceptions": [],
      "maxSdk": 34,
      "name": "nGetReleaseResultFunc()"
    },
    "nInit(int,int,boolean,int[])": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "breakStrategy",
        "hyphenationFrequency",
        "isJustified",
        "indents"
      ],
      "returnType": "long",
      "exceptions": [],
      "maxSdk": 34,
      "name": "nInit(int,int,boolean,int[])"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.Q",
    "android.annotation.FloatRange",
    "android.annotation.IntRange",
    "android.graphics.text.LineBreaker",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.nativeruntime.DefaultNativeRuntimeLoader",
    "org.robolectric.nativeruntime.LineBreakerNatives",
    "org.robolectric.shadows.ShadowNativeLineBreaker.Picker",
    "org.robolectric.versioning.AndroidVersions.U",
    "org.robolectric.versioning.AndroidVersions.V",
    "org.robolectric.shadows.ShadowNativeLineBreaker.Picker"
  ],
  "name": "org.robolectric.shadows.ShadowNativeLineBreaker",
  "documentation": "Shadow for {@link LineBreaker} that is backed by native code "
}