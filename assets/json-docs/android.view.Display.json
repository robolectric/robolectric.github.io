{
  "methods": {
    "getDefaultDisplay()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "android.view.Display",
      "exceptions": [],
      "name": "getDefaultDisplay()",
      "documentation": "Returns the default display.\n\n@return the default display\n"
    },
    "getMetrics(android.util.DisplayMetrics)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "outMetrics"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "getMetrics(android.util.DisplayMetrics)",
      "documentation": "If {@link #setScaledDensity(float)} has been called, {@link DisplayMetrics#scaledDensity} will\nbe modified to reflect the value specified. Note that this is not a realistic state.\n\n@deprecated This behavior is deprecated and will be removed in Robolectric 4.13.\n"
    },
    "getRealMetrics(android.util.DisplayMetrics)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "outMetrics"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "getRealMetrics(android.util.DisplayMetrics)",
      "documentation": "If {@link #setScaledDensity(float)} has been called, {@link DisplayMetrics#scaledDensity} will\nbe modified to reflect the value specified. Note that this is not a realistic state.\n\n@deprecated This behavior is deprecated and will be removed in Robolectric 4.13.\n"
    },
    "getRefreshRate()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "float",
      "exceptions": [],
      "name": "getRefreshRate()",
      "documentation": "If {@link #setRefreshRate(float)} has been called, this method will return the specified value.\n\n@deprecated This behavior is deprecated and will be removed in Robolectric 3.7.\n"
    },
    "setDensity(float)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "density"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDensity(float)",
      "documentation": "Changes the density for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n"
    },
    "setDensityDpi(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "densityDpi"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDensityDpi(int)",
      "documentation": "Changes the density for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n"
    },
    "setDisplayCutout(java.lang.Object)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "displayCutout"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDisplayCutout(java.lang.Object)",
      "documentation": "Changes the display cutout for this display.\n\n@throws UnsupportedOperationException if the method is called below Android version Q.\n"
    },
    "setDisplayHdrCapabilities(int,float,float,float,int...)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "displayId",
        "maxLuminance",
        "maxAverageLuminance",
        "minLuminance",
        "supportedHdrTypes"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDisplayHdrCapabilities(int,float,float,float,int...)",
      "documentation": "Set HDR capabilities to the display sourced with displayId. see {@link HdrCapabilities} for\nsupportedHdrTypes.\n\n@throws UnsupportedOperationException if the method is called below Android vesrsion N.\n"
    },
    "setFlags(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "flags"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setFlags(int)",
      "documentation": "Changes the flags for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n"
    },
    "setHdrSdrRatio(float)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "hdrSdrRatio"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setHdrSdrRatio(float)",
      "documentation": "Sets current hdr/sdr ratio expressed as the ratio of targetHdrPeakBrightnessInNits /\ntargetSdrWhitePointInNits. This will have the intended side effect of making {@link\nDisplay#isHdrSdrRatioAvailable()} equal to true if set to any value other than {@link\nFloat#NaN}.\n\n@throws UnsupportedOperationException if the method is called below Android version U.\n"
    },
    "setHeight(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "height"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setHeight(int)",
      "documentation": "Changes the height available to the application for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n\n@param height new height in pixels\n"
    },
    "setName(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "name"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setName(java.lang.String)",
      "documentation": "Changes the name for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n"
    },
    "setRealHeight(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "height"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setRealHeight(int)",
      "documentation": "Changes the simulated physical height for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n\n@param height the new height in pixels\n"
    },
    "setRealWidth(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "width"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setRealWidth(int)",
      "documentation": "Changes the simulated physical width for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n\n@param width the new width in pixels\n"
    },
    "setRefreshRate(float)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "refreshRate"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setRefreshRate(float)",
      "documentation": "Changes the refresh rate for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n"
    },
    "setRotation(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "rotation"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setRotation(int)",
      "documentation": "Changes the rotation for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n\n@param rotation one of {@link Surface#ROTATION_0}, {@link Surface#ROTATION_90}, {@link\n    Surface#ROTATION_180}, {@link Surface#ROTATION_270}\n"
    },
    "setScaledDensity(float)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "scaledDensity"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setScaledDensity(float)",
      "documentation": "Changes the scaled density for this display.\n\n@deprecated This method is deprecated and will be removed in Robolectric 4.13.\n"
    },
    "setState(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "state"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setState(int)",
      "documentation": "Changes the simulated state for this display, such as whether it is on or off\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n\n@param state the new state: one of {@link Display#STATE_OFF}, {@link Display#STATE_ON}, {@link\n    Display#STATE_DOZE}, {@link Display#STATE_DOZE_SUSPEND}, or {@link Display#STATE_UNKNOWN}.\n"
    },
    "setWidth(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "width"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setWidth(int)",
      "documentation": "Changes the width available to the application for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n\n@param width the new width in pixels\n"
    },
    "setXdpi(float)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "xdpi"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setXdpi(float)",
      "documentation": "Changes the horizontal DPI for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n"
    },
    "setYdpi(float)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "ydpi"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setYdpi(float)",
      "documentation": "Changes the vertical DPI for this display.\n\n\u003cp\u003eAny registered {@link android.hardware.display.DisplayManager.DisplayListener}s will be\nnotified of the change.\n"
    }
  },
  "imports": [
    "org.robolectric.util.reflector.Reflector.reflector",
    "android.content.Context",
    "android.os.Build",
    "android.os.Build.VERSION_CODES",
    "android.util.DisplayMetrics",
    "android.view.Display",
    "android.view.Display.HdrCapabilities",
    "android.view.Surface",
    "android.view.WindowManager",
    "org.robolectric.RuntimeEnvironment",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.util.reflector.Accessor",
    "org.robolectric.util.reflector.Direct",
    "org.robolectric.util.reflector.ForType",
    "org.robolectric.shadows.ShadowDisplay._Display_",
    "org.robolectric.shadows.ShadowDisplay.DisplayModeReflector"
  ],
  "name": "org.robolectric.shadows.ShadowDisplay",
  "documentation": "It is possible to override some display properties using setters on {@link ShadowDisplay}.\n\n@see \u003ca href\u003d\"http://robolectric.org/device-configuration/\"\u003edevice configuration\u003c/a\u003e for details.\n"
}