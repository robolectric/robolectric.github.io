{
  "methods": {
    "bindSocket(java.io.FileDescriptor)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "fd"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 23,
      "name": "bindSocket(java.io.FileDescriptor)",
      "documentation": "Simulates a socket bind. isSocketBound can be called to verify that the fd was bound to\nthis network interface, and boundSocketCount() will increment for any unique socket.\n"
    },
    "bindSocket(java.net.DatagramSocket)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "socket"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 22,
      "name": "bindSocket(java.net.DatagramSocket)",
      "documentation": "Simulates a socket bind. isSocketBound can be called to verify that the socket was bound to\nthis network interface, and boundSocketCount() will increment for any unique socket.\n"
    },
    "bindSocket(java.net.Socket)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "socket"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "bindSocket(java.net.Socket)",
      "documentation": "Simulates a socket bind. isSocketBound can be called to verify that the socket was bound to\nthis network interface, and boundSocketCount() will increment for any unique socket.\n"
    },
    "boundSocketCount()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "boundSocketCount()",
      "documentation": "Returns the total number of sockets bound to this network interface. "
    },
    "getNetId()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 30,
      "name": "getNetId()",
      "documentation": "Allows to get the stored netId.\n\n@return The netId.\n"
    },
    "isSocketBound(java.io.FileDescriptor)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "fd"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isSocketBound(java.io.FileDescriptor)",
      "documentation": "Checks if the {@code fileDescriptor} was previously bound to this network. "
    },
    "isSocketBound(java.net.DatagramSocket)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "socket"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isSocketBound(java.net.DatagramSocket)",
      "documentation": "Checks if the {@code datagramSocket} was previously bound to this network. "
    },
    "isSocketBound(java.net.Socket)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "socket"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isSocketBound(java.net.Socket)",
      "documentation": "Checks if the {@code socket} was previously bound to this network. "
    },
    "newInstance(int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "netId"
      ],
      "returnType": "android.net.Network",
      "exceptions": [],
      "name": "newInstance(int)",
      "documentation": "Creates new instance of {@link Network}, because its constructor is hidden.\n\n\u003cp\u003eRequires API 21 (Lollipop) and above.\n\n@param netId The netId.\n@return The Network instance.\n"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.LOLLIPOP_MR1",
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.R",
    "android.net.Network",
    "com.google.common.base.Preconditions",
    "java.io.FileDescriptor",
    "java.net.DatagramSocket",
    "java.net.Socket",
    "java.util.HashSet",
    "java.util.Set",
    "org.robolectric.RuntimeEnvironment",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.shadow.api.Shadow",
    "org.robolectric.util.ReflectionHelpers"
  ],
  "name": "org.robolectric.shadows.ShadowNetwork"
}