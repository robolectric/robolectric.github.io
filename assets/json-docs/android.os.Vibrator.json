{
  "methods": {
    "getEffectId()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getEffectId()",
      "documentation": "Returns the last vibration effect ID of a {@link VibrationEffect#Prebaked} (e.g. {@link\nVibrationEffect#EFFECT_CLICK}).\n\n\u003cp\u003eThis field is non-zero only if a {@link VibrationEffect#Prebaked} was ever requested.\n"
    },
    "getMilliseconds()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "long",
      "exceptions": [],
      "name": "getMilliseconds()",
      "documentation": "Returns the last vibration duration in MS.\n"
    },
    "getPattern()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "long[]",
      "exceptions": [],
      "name": "getPattern()",
      "documentation": "Returns the last vibration pattern.\n"
    },
    "getRepeat()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getRepeat()",
      "documentation": "Returns the last vibration repeat times.\n"
    },
    "isCancelled()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isCancelled()",
      "documentation": "Returns true if the Vibrator has been cancelled.\n"
    },
    "isVibrating()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isVibrating()",
      "documentation": "Returns true if the Vibrator is currently vibrating as controlled by {@link Vibrator#vibrate(long)}\n"
    },
    "setHasAmplitudeControl(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "hasAmplitudeControl"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setHasAmplitudeControl(boolean)",
      "documentation": "Controls the return value of {@link Vibrator#hasAmplitudeControl()} the default is false.\n"
    },
    "setHasVibrator(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "hasVibrator"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setHasVibrator(boolean)",
      "documentation": "Controls the return value of {@link Vibrator#hasVibrator()} the default is true.\n"
    }
  },
  "imports": [
    "android.os.Vibrator",
    "org.robolectric.annotation.Implements"
  ],
  "name": "org.robolectric.shadows.ShadowVibrator"
}