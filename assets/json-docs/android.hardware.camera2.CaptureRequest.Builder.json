{
  "methods": {
    "\u003cT\u003eget(android.hardware.camera2.CaptureRequest.Key\u003cT\u003e)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "key"
      ],
      "returnType": "T",
      "exceptions": [],
      "name": "\u003cT\u003eget(android.hardware.camera2.CaptureRequest.Key\u003cT\u003e)",
      "documentation": "Original implementation would store its state in a local CameraMetadataNative object. Instead,\nwe are extracting the data from a managed map stored in the shadow.\n"
    },
    "\u003cT\u003eset(android.hardware.camera2.CaptureRequest.Key\u003cT\u003e,T)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "key",
        "value"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "\u003cT\u003eset(android.hardware.camera2.CaptureRequest.Key\u003cT\u003e,T)",
      "documentation": "Original implementation would store its state in a local CameraMetadataNative object. Trying\nto set these values causes issues while testing as that starts to involve native code. We write\nto a managed map stored in the shadow instead.\n"
    }
  },
  "imports": [
    "android.hardware.camera2.CaptureRequest",
    "android.hardware.camera2.CaptureRequest.Key",
    "android.os.Build.VERSION_CODES",
    "java.util.Collections",
    "java.util.HashMap",
    "java.util.Map",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements"
  ],
  "name": "org.robolectric.shadows.ShadowCaptureRequestBuilder",
  "documentation": "Shadow class for {@link CaptureRequest.Builder}. "
}