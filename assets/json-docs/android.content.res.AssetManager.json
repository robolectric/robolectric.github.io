{
  "methods": {
    "__constructor__()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "__constructor__()"
    },
    "__constructor__(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "isSystem"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "__constructor__(boolean)"
    },
    "addAssetPath(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "path"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "addAssetPath(java.lang.String)"
    },
    "addAssetPathNative(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "path"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 23,
      "name": "addAssetPathNative(java.lang.String)"
    },
    "addAssetPathNative(java.lang.String,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "path",
        "appAsLib"
      ],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 24,
      "maxSdk": 27,
      "name": "addAssetPathNative(java.lang.String,boolean)"
    },
    "applyStyle(int,int,int,int,int[],int[],int[])": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "themeToken",
        "defStyleAttr",
        "defStyleRes",
        "xmlParserToken",
        "attrs",
        "outValues",
        "outIndices"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "maxSdk": 20,
      "name": "applyStyle(int,int,int,int,int[],int[],int[])"
    },
    "applyStyle(long,int,int,long,int[],int,long,long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "themeToken",
        "defStyleAttr",
        "defStyleRes",
        "xmlParserToken",
        "inAttrs",
        "length",
        "outValuesAddress",
        "outIndicesAddress"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "maxSdk": 27,
      "name": "applyStyle(long,int,int,long,int[],int,long,long)"
    },
    "applyStyle(long,int,int,long,int[],int[],int[])": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "themeToken",
        "defStyleAttr",
        "defStyleRes",
        "xmlParserToken",
        "attrs",
        "outValues",
        "outIndices"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 25,
      "name": "applyStyle(long,int,int,long,int[],int[],int[])"
    },
    "applyStyleToTheme(long,int,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "themePtr",
        "resId",
        "force"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 28,
      "name": "applyStyleToTheme(long,int,boolean)"
    },
    "applyThemeStyle(int,int,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "themePtr",
        "styleRes",
        "force"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "applyThemeStyle(int,int,boolean)"
    },
    "applyThemeStyle(long,int,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "themePtr",
        "styleRes",
        "force"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "applyThemeStyle(long,int,boolean)"
    },
    "attrsToTypedArray(android.content.res.Resources,android.util.AttributeSet,int[],int,long,int)": {
      "isImplementation": false,
      "modifiers": [],
      "params": [
        "resources",
        "set",
        "attrs",
        "defStyleAttr",
        "nativeTheme",
        "defStyleRes"
      ],
      "returnType": "android.content.res.TypedArray",
      "exceptions": [],
      "name": "attrsToTypedArray(android.content.res.Resources,android.util.AttributeSet,int[],int,long,int)"
    },
    "buildTypedValue(android.util.AttributeSet,int,int,org.robolectric.res.Style,int)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "set",
        "resId",
        "defStyleAttr",
        "themeStyleSet",
        "defStyleRes"
      ],
      "returnType": "android.util.TypedValue",
      "exceptions": [],
      "name": "buildTypedValue(android.util.AttributeSet,int,int,org.robolectric.res.Style,int)"
    },
    "convertAndFill(org.robolectric.res.AttributeResource,android.util.TypedValue,org.robolectric.res.android.ResTable_config,boolean)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "attribute",
        "outValue",
        "config",
        "resolveRefs"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "convertAndFill(org.robolectric.res.AttributeResource,android.util.TypedValue,org.robolectric.res.android.ResTable_config,boolean)"
    },
    "copyTheme(int,int)": {
      "isImplementation": true,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "destPtr",
        "sourcePtr"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "copyTheme(int,int)"
    },
    "copyTheme(long,long)": {
      "isImplementation": true,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "destPtr",
        "sourcePtr"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "copyTheme(long,long)"
    },
    "createTheme()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.lang.Number",
      "exceptions": [],
      "name": "createTheme()"
    },
    "deleteTheme(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "theme"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "deleteTheme(int)"
    },
    "deleteTheme(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "theme"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "deleteTheme(long)"
    },
    "destroyAsset(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "asset"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "destroyAsset(int)"
    },
    "destroyAsset(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "asset"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "destroyAsset(long)"
    },
    "dumpTheme(long,int,java.lang.String,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "theme",
        "priority",
        "tag",
        "prefix"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "dumpTheme(long,int,java.lang.String,java.lang.String)"
    },
    "ensureStringBlocks()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.Object",
      "exceptions": [],
      "maxSdk": 27,
      "name": "ensureStringBlocks()"
    },
    "findAssetFile(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "fileName"
      ],
      "returnType": "java.nio.file.Path",
      "exceptions": [
        "java.io.IOException"
      ],
      "name": "findAssetFile(java.lang.String)"
    },
    "findAttributeValue(int,android.util.AttributeSet,org.robolectric.res.Style,org.robolectric.res.Style,org.robolectric.res.Style,org.robolectric.res.Style)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "resId",
        "attributeSet",
        "styleAttrStyle",
        "defStyleFromAttr",
        "defStyleFromRes",
        "themeStyleSet"
      ],
      "returnType": "org.robolectric.res.AttributeResource",
      "exceptions": [],
      "name": "findAttributeValue(int,android.util.AttributeSet,org.robolectric.res.Style,org.robolectric.res.Style,org.robolectric.res.Style,org.robolectric.res.Style)"
    },
    "getAllAssetDirs()": {
      "isImplementation": false,
      "modifiers": [],
      "params": [],
      "returnType": "java.util.Collection\u003cjava.nio.file.Path\u003e",
      "exceptions": [],
      "name": "getAllAssetDirs()"
    },
    "getAndResolve(int,org.robolectric.res.android.ResTable_config,boolean)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "resId",
        "config",
        "resolveRefs"
      ],
      "returnType": "org.robolectric.res.TypedResource",
      "exceptions": [],
      "name": "getAndResolve(int,org.robolectric.res.android.ResTable_config,boolean)"
    },
    "getArrayIntResource(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "resId"
      ],
      "returnType": "int[]",
      "exceptions": [],
      "maxSdk": 27,
      "name": "getArrayIntResource(int)"
    },
    "getArraySize(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "id"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 27,
      "name": "getArraySize(int)"
    },
    "getArrayStringInfo(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "arrayResId"
      ],
      "returnType": "int[]",
      "exceptions": [],
      "maxSdk": 27,
      "name": "getArrayStringInfo(int)"
    },
    "getArrayStringResource(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "arrayResId"
      ],
      "returnType": "java.lang.String[]",
      "exceptions": [],
      "maxSdk": 27,
      "name": "getArrayStringResource(int)"
    },
    "getAssetLength(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "asset"
      ],
      "returnType": "long",
      "exceptions": [],
      "maxSdk": 20,
      "name": "getAssetLength(int)"
    },
    "getAssetLength(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "asset"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "getAssetLength(long)"
    },
    "getAssetRemainingLength(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "asset"
      ],
      "returnType": "long",
      "exceptions": [],
      "maxSdk": 20,
      "name": "getAssetRemainingLength(int)"
    },
    "getAssetRemainingLength(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "assetHandle"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "getAssetRemainingLength(long)"
    },
    "getAssignedPackageIdentifiers()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "android.util.SparseArray\u003cjava.lang.String\u003e",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "getAssignedPackageIdentifiers()"
    },
    "getAttrTypeData(org.robolectric.res.ResName)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "resName"
      ],
      "returnType": "org.robolectric.res.TypedResource",
      "exceptions": [],
      "name": "getAttrTypeData(org.robolectric.res.ResName)"
    },
    "getConverter(org.robolectric.res.TypedResource)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "value"
      ],
      "returnType": "org.robolectric.shadows.Converter",
      "exceptions": [],
      "name": "getConverter(org.robolectric.res.TypedResource)"
    },
    "getFileFromZip(java.nio.file.Path)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "path"
      ],
      "returnType": "java.nio.file.Path",
      "exceptions": [],
      "name": "getFileFromZip(java.nio.file.Path)",
      "documentation": "Extract an asset from a zipped up assets provided by the build system, this is required because\nthere is no way to get a FileDescriptor from a zip entry. This is a temporary measure for Bazel\nwhich can be removed once binary resources are supported.\n"
    },
    "getLocales()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.String[]",
      "exceptions": [],
      "name": "getLocales()"
    },
    "getNativePtr()": {
      "isImplementation": false,
      "modifiers": [],
      "params": [],
      "returnType": "long",
      "exceptions": [],
      "name": "getNativePtr()"
    },
    "getNativeStringBlock(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "block"
      ],
      "returnType": "java.lang.Number",
      "exceptions": [],
      "maxSdk": 27,
      "name": "getNativeStringBlock(int)"
    },
    "getNativeTheme(long)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "themePtr"
      ],
      "returnType": "org.robolectric.shadows.ShadowLegacyAssetManager.NativeTheme",
      "exceptions": [],
      "name": "getNativeTheme(long)"
    },
    "getResName(int)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "id"
      ],
      "returnType": "org.robolectric.res.ResName",
      "exceptions": [],
      "name": "getResName(int)"
    },
    "getResourceBagText(int,int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "ident",
        "bagEntryId"
      ],
      "returnType": "java.lang.CharSequence",
      "exceptions": [],
      "name": "getResourceBagText(int,int)"
    },
    "getResourceEntryName(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "resid"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getResourceEntryName(int)"
    },
    "getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "name",
        "defType",
        "defPackage"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String)"
    },
    "getResourceIntArray(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "resId"
      ],
      "returnType": "int[]",
      "exceptions": [],
      "minSdk": 28,
      "name": "getResourceIntArray(int)"
    },
    "getResourceName(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "resid"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getResourceName(int)"
    },
    "getResourcePackageName(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "resid"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getResourcePackageName(int)"
    },
    "getResourceStringArray(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "id"
      ],
      "returnType": "java.lang.String[]",
      "exceptions": [],
      "name": "getResourceStringArray(int)"
    },
    "getResourceTable()": {
      "isImplementation": false,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "org.robolectric.res.ResourceTable",
      "exceptions": [],
      "name": "getResourceTable()"
    },
    "getResourceText(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "ident"
      ],
      "returnType": "java.lang.CharSequence",
      "exceptions": [],
      "name": "getResourceText(int)"
    },
    "getResourceTextArray(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "resId"
      ],
      "returnType": "java.lang.CharSequence[]",
      "exceptions": [],
      "name": "getResourceTextArray(int)"
    },
    "getResourceType(org.robolectric.res.TypedResource)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "typedResource"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "getResourceType(org.robolectric.res.TypedResource)"
    },
    "getResourceTypeName(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "resid"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "getResourceTypeName(int)"
    },
    "getResourceValue(int,int,android.util.TypedValue,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "ident",
        "density",
        "outValue",
        "resolveRefs"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "getResourceValue(int,int,android.util.TypedValue,boolean)"
    },
    "getStringBlockCount()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 27,
      "name": "getStringBlockCount()"
    },
    "getThemeValue(int,int,android.util.TypedValue,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "themePtr",
        "ident",
        "outValue",
        "resolveRefs"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "maxSdk": 20,
      "name": "getThemeValue(int,int,android.util.TypedValue,boolean)"
    },
    "getThemeValue(long,int,android.util.TypedValue,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "themePtr",
        "ident",
        "outValue",
        "resolveRefs"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 21,
      "name": "getThemeValue(long,int,android.util.TypedValue,boolean)"
    },
    "getTypedArray(android.content.res.Resources,java.util.List\u003corg.robolectric.res.TypedResource\u003e,int)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "resources",
        "typedResources",
        "resId"
      ],
      "returnType": "android.content.res.TypedArray",
      "exceptions": [],
      "name": "getTypedArray(android.content.res.Resources,java.util.List\u003corg.robolectric.res.TypedResource\u003e,int)"
    },
    "getTypedArrayResource(android.content.res.Resources,int)": {
      "isImplementation": false,
      "modifiers": [
        "protected"
      ],
      "params": [
        "resources",
        "resId"
      ],
      "returnType": "android.content.res.TypedArray",
      "exceptions": [],
      "name": "getTypedArrayResource(android.content.res.Resources,int)"
    },
    "getXmlResourceParser(org.robolectric.res.ResourceTable,org.robolectric.res.builder.XmlBlock,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "resourceProvider",
        "block",
        "packageName"
      ],
      "returnType": "android.content.res.XmlResourceParser",
      "exceptions": [],
      "name": "getXmlResourceParser(org.robolectric.res.ResourceTable,org.robolectric.res.builder.XmlBlock,java.lang.String)"
    },
    "init()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "init()"
    },
    "init(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "isSystem"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "init(boolean)"
    },
    "isUpToDate()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isUpToDate()"
    },
    "list(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "path"
      ],
      "returnType": "java.lang.String[]",
      "exceptions": [
        "java.io.IOException"
      ],
      "name": "list(java.lang.String)"
    },
    "loadResourceBagValue(int,int,android.util.TypedValue,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "ident",
        "bagEntryId",
        "outValue",
        "resolve"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 27,
      "name": "loadResourceBagValue(int,int,android.util.TypedValue,boolean)"
    },
    "loadResourceValue(int,short,android.util.TypedValue,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "ident",
        "density",
        "outValue",
        "resolve"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 27,
      "name": "loadResourceValue(int,short,android.util.TypedValue,boolean)"
    },
    "loadThemeAttributeValue(int,int,android.util.TypedValue,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "themeHandle",
        "ident",
        "outValue",
        "resolve"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 20,
      "name": "loadThemeAttributeValue(int,int,android.util.TypedValue,boolean)"
    },
    "loadThemeAttributeValue(long,int,android.util.TypedValue,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "themeHandle",
        "ident",
        "outValue",
        "resolve"
      ],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "loadThemeAttributeValue(long,int,android.util.TypedValue,boolean)"
    },
    "loadXmlResourceParser(int,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "protected"
      ],
      "params": [
        "resId",
        "type"
      ],
      "returnType": "android.content.res.XmlResourceParser",
      "exceptions": [
        "android.content.res.Resources.NotFoundException"
      ],
      "name": "loadXmlResourceParser(int,java.lang.String)"
    },
    "nativeAssetDestroy(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "asset_ptr"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 28,
      "name": "nativeAssetDestroy(long)"
    },
    "nativeAssetGetLength(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "asset_ptr"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 28,
      "name": "nativeAssetGetLength(long)"
    },
    "nativeAssetGetRemainingLength(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "asset_ptr"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 28,
      "name": "nativeAssetGetRemainingLength(long)"
    },
    "nativeAssetRead(long,byte[],int,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "asset_ptr",
        "java_buffer",
        "offset",
        "len"
      ],
      "returnType": "int",
      "exceptions": [
        "java.io.IOException"
      ],
      "minSdk": 28,
      "name": "nativeAssetRead(long,byte[],int,int)"
    },
    "nativeAssetReadChar(long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "asset_ptr"
      ],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 28,
      "name": "nativeAssetReadChar(long)"
    },
    "nativeAssetSeek(long,long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "asset_ptr",
        "offset",
        "whence"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 28,
      "name": "nativeAssetSeek(long,long,int)"
    },
    "nativeCreate()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 28,
      "name": "nativeCreate()"
    },
    "nativeCreateIdmapsForStaticOverlaysTargetingAndroid()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "java.lang.String[]",
      "exceptions": [],
      "minSdk": 29,
      "maxSdk": 30,
      "name": "nativeCreateIdmapsForStaticOverlaysTargetingAndroid()"
    },
    "nativeThemeCopy(long,long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "destPtr",
        "sourcePtr"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 28,
      "maxSdk": 28,
      "name": "nativeThemeCopy(long,long)"
    },
    "nativeThemeCopy(long,long,long,long)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "dstAssetManagerPtr",
        "dstThemePtr",
        "srcAssetManagerPtr",
        "srcThemePtr"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 29,
      "name": "nativeThemeCopy(long,long,long,long)"
    },
    "newTheme()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.lang.Number",
      "exceptions": [],
      "maxSdk": 27,
      "name": "newTheme()"
    },
    "open(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "fileName"
      ],
      "returnType": "java.io.InputStream",
      "exceptions": [
        "java.io.IOException"
      ],
      "name": "open(java.lang.String)"
    },
    "open(java.lang.String,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "fileName",
        "accessMode"
      ],
      "returnType": "java.io.InputStream",
      "exceptions": [
        "java.io.IOException"
      ],
      "name": "open(java.lang.String,int)"
    },
    "openAsset(java.lang.String,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "fileName",
        "mode"
      ],
      "returnType": "java.lang.Number",
      "exceptions": [
        "java.io.FileNotFoundException"
      ],
      "maxSdk": 27,
      "name": "openAsset(java.lang.String,int)"
    },
    "openAssetFd(java.lang.String,long[])": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "fileName",
        "outOffsets"
      ],
      "returnType": "android.os.ParcelFileDescriptor",
      "exceptions": [
        "java.io.IOException"
      ],
      "maxSdk": 27,
      "name": "openAssetFd(java.lang.String,long[])"
    },
    "openFd(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "fileName"
      ],
      "returnType": "android.content.res.AssetFileDescriptor",
      "exceptions": [
        "java.io.IOException"
      ],
      "name": "openFd(java.lang.String)"
    },
    "openNonAsset(int,java.lang.String,int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "cookie",
        "fileName",
        "accessMode"
      ],
      "returnType": "java.io.InputStream",
      "exceptions": [
        "java.io.IOException"
      ],
      "name": "openNonAsset(int,java.lang.String,int)"
    },
    "openNonAssetFd(int,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "cookie",
        "fileName"
      ],
      "returnType": "android.content.res.AssetFileDescriptor",
      "exceptions": [
        "java.io.IOException"
      ],
      "name": "openNonAssetFd(int,java.lang.String)"
    },
    "openNonAssetFdNative(int,java.lang.String,long[])": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "cookie",
        "fileName",
        "outOffsets"
      ],
      "returnType": "android.os.ParcelFileDescriptor",
      "exceptions": [
        "java.io.IOException"
      ],
      "maxSdk": 27,
      "name": "openNonAssetFdNative(int,java.lang.String,long[])"
    },
    "openNonAssetNative(int,java.lang.String,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "cookie",
        "fileName",
        "accessMode"
      ],
      "returnType": "java.lang.Number",
      "exceptions": [
        "java.io.FileNotFoundException"
      ],
      "maxSdk": 27,
      "name": "openNonAssetNative(int,java.lang.String,int)"
    },
    "openXmlAssetNative(int,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "cookie",
        "fileName"
      ],
      "returnType": "java.lang.Number",
      "exceptions": [
        "java.io.FileNotFoundException"
      ],
      "maxSdk": 27,
      "name": "openXmlAssetNative(int,java.lang.String)"
    },
    "openXmlResourceParser(int,java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "cookie",
        "fileName"
      ],
      "returnType": "android.content.res.XmlResourceParser",
      "exceptions": [
        "java.io.IOException"
      ],
      "name": "openXmlResourceParser(int,java.lang.String)"
    },
    "qualifyFromNonAssetFileName(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "fileName"
      ],
      "returnType": "org.robolectric.res.ResName",
      "exceptions": [],
      "name": "qualifyFromNonAssetFileName(java.lang.String)"
    },
    "releaseTheme(int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "themePtr"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 20,
      "name": "releaseTheme(int)"
    },
    "releaseTheme(long)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "themePtr"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 21,
      "name": "releaseTheme(long)"
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()"
    },
    "resolve(org.robolectric.res.TypedResource,org.robolectric.res.android.ResTable_config,int)": {
      "isImplementation": false,
      "modifiers": [],
      "params": [
        "value",
        "config",
        "resId"
      ],
      "returnType": "org.robolectric.res.TypedResource",
      "exceptions": [],
      "name": "resolve(org.robolectric.res.TypedResource,org.robolectric.res.android.ResTable_config,int)"
    },
    "resolveAttrs(long,int,int,int[],int[],int[],int[])": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "themeToken",
        "defStyleAttr",
        "defStyleRes",
        "inValues",
        "attrs",
        "outValues",
        "outIndices"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "resolveAttrs(long,int,int,int[],int[],int[],int[])"
    },
    "resolveResName(org.robolectric.res.ResName,org.robolectric.res.android.ResTable_config)": {
      "isImplementation": false,
      "modifiers": [
        "protected"
      ],
      "params": [
        "resName",
        "config"
      ],
      "returnType": "org.robolectric.res.ResName",
      "exceptions": [],
      "name": "resolveResName(org.robolectric.res.ResName,org.robolectric.res.android.ResTable_config)"
    },
    "resolveResource(org.robolectric.res.TypedResource,org.robolectric.res.android.ResTable_config,org.robolectric.res.ResName)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "value",
        "config",
        "resName"
      ],
      "returnType": "org.robolectric.res.ResName",
      "exceptions": [],
      "name": "resolveResource(org.robolectric.res.TypedResource,org.robolectric.res.android.ResTable_config,org.robolectric.res.ResName)"
    },
    "resolveResourceValue(org.robolectric.res.TypedResource,org.robolectric.res.android.ResTable_config,int)": {
      "isImplementation": false,
      "modifiers": [
        "protected"
      ],
      "params": [
        "value",
        "config",
        "resId"
      ],
      "returnType": "org.robolectric.res.TypedResource",
      "exceptions": [],
      "name": "resolveResourceValue(org.robolectric.res.TypedResource,org.robolectric.res.android.ResTable_config,int)"
    },
    "resolveResourceValue(org.robolectric.res.TypedResource,org.robolectric.res.android.ResTable_config,org.robolectric.res.ResName)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "value",
        "config",
        "resName"
      ],
      "returnType": "org.robolectric.res.TypedResource",
      "exceptions": [],
      "name": "resolveResourceValue(org.robolectric.res.TypedResource,org.robolectric.res.android.ResTable_config,org.robolectric.res.ResName)"
    },
    "resolveStyle(int,org.robolectric.res.Style)": {
      "isImplementation": false,
      "modifiers": [],
      "params": [
        "resId",
        "themeStyleSet"
      ],
      "returnType": "org.robolectric.res.Style",
      "exceptions": [],
      "name": "resolveStyle(int,org.robolectric.res.Style)"
    },
    "resolveStyle(org.robolectric.res.ResName,org.robolectric.res.Style)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "themeStyleName",
        "themeStyleSet"
      ],
      "returnType": "org.robolectric.res.Style",
      "exceptions": [],
      "name": "resolveStyle(org.robolectric.res.ResName,org.robolectric.res.Style)"
    },
    "retrieveArray(int,int[])": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "id",
        "outValues"
      ],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 27,
      "name": "retrieveArray(int,int[])"
    },
    "retrieveAttributes(int,int[],int[],int[])": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "xmlParserToken",
        "attrs",
        "outValues",
        "outIndices"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "maxSdk": 20,
      "name": "retrieveAttributes(int,int[],int[],int[])"
    },
    "retrieveAttributes(long,int[],int[],int[])": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "xmlParserToken",
        "attrs",
        "outValues",
        "outIndices"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "retrieveAttributes(long,int[],int[],int[])"
    },
    "seekAsset(int,long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "asset",
        "offset",
        "whence"
      ],
      "returnType": "long",
      "exceptions": [],
      "maxSdk": 20,
      "name": "seekAsset(int,long,int)"
    },
    "seekAsset(long,long,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "asset",
        "offset",
        "whence"
      ],
      "returnType": "long",
      "exceptions": [],
      "minSdk": 21,
      "maxSdk": 27,
      "name": "seekAsset(long,long,int)"
    },
    "setApkAssets(java.lang.Object,java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "apkAssetsObject",
        "invalidateCachesObject"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 28,
      "name": "setApkAssets(java.lang.Object,java.lang.Object)"
    },
    "setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int)": {
      "isImplementation": true,
      "modifiers": [
        "public",
        "final"
      ],
      "params": [
        "mcc",
        "mnc",
        "locale",
        "orientation",
        "touchscreen",
        "density",
        "keyboard",
        "keyboardHidden",
        "navigation",
        "screenWidth",
        "screenHeight",
        "smallestScreenWidthDp",
        "screenWidthDp",
        "screenHeightDp",
        "screenLayout",
        "uiMode",
        "sdkVersion"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 25,
      "name": "setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int)"
    },
    "setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "mcc",
        "mnc",
        "locale",
        "orientation",
        "touchscreen",
        "density",
        "keyboard",
        "keyboardHidden",
        "navigation",
        "screenWidth",
        "screenHeight",
        "smallestScreenWidthDp",
        "screenWidthDp",
        "screenHeightDp",
        "screenLayout",
        "uiMode",
        "colorMode",
        "majorVersion"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "maxSdk": 33,
      "name": "setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)"
    },
    "setLocale(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "locale"
      ],
      "returnType": "void",
      "exceptions": [],
      "maxSdk": 23,
      "name": "setLocale(java.lang.String)"
    },
    "strictError(java.lang.String,java.lang.Object...)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "message",
        "args"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "strictError(java.lang.String,java.lang.Object...)"
    },
    "windowsWorkaround(java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [
        "fileWithinJar"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "name": "windowsWorkaround(java.lang.String)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.KITKAT_WATCH",
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.N",
    "android.os.Build.VERSION_CODES.N_MR1",
    "android.os.Build.VERSION_CODES.O",
    "android.os.Build.VERSION_CODES.O_MR1",
    "android.os.Build.VERSION_CODES.P",
    "android.os.Build.VERSION_CODES.TIRAMISU",
    "org.robolectric.RuntimeEnvironment.castNativePtr",
    "org.robolectric.shadow.api.Shadow.invokeConstructor",
    "org.robolectric.util.ReflectionHelpers.ClassParameter.from",
    "org.robolectric.util.reflector.Reflector.reflector",
    "android.annotation.SuppressLint",
    "android.content.res.ApkAssets",
    "android.content.res.AssetFileDescriptor",
    "android.content.res.AssetManager",
    "android.content.res.Resources",
    "android.content.res.TypedArray",
    "android.content.res.XmlResourceParser",
    "android.os.Build.VERSION_CODES",
    "android.os.ParcelFileDescriptor",
    "android.util.AttributeSet",
    "android.util.SparseArray",
    "android.util.TypedValue",
    "com.google.common.annotations.VisibleForTesting",
    "com.google.common.collect.Ordering",
    "dalvik.system.VMRuntime",
    "java.io.ByteArrayInputStream",
    "java.io.File",
    "java.io.FileNotFoundException",
    "java.io.IOException",
    "java.io.InputStream",
    "java.io.OutputStream",
    "java.io.UnsupportedEncodingException",
    "java.net.MalformedURLException",
    "java.net.URL",
    "java.net.URLDecoder",
    "java.nio.file.Files",
    "java.nio.file.Path",
    "java.util.ArrayList",
    "java.util.Arrays",
    "java.util.Collection",
    "java.util.Collections",
    "java.util.HashMap",
    "java.util.List",
    "java.util.Map",
    "java.util.Set",
    "java.util.concurrent.CopyOnWriteArraySet",
    "javax.annotation.Nonnull",
    "org.robolectric.RuntimeEnvironment",
    "org.robolectric.android.XmlResourceParserImpl",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.annotation.Resetter",
    "org.robolectric.res.AttrData",
    "org.robolectric.res.AttributeResource",
    "org.robolectric.res.EmptyStyle",
    "org.robolectric.res.FileTypedResource",
    "org.robolectric.res.Fs",
    "org.robolectric.res.ResName",
    "org.robolectric.res.ResType",
    "org.robolectric.res.ResourceIds",
    "org.robolectric.res.ResourceTable",
    "org.robolectric.res.Style",
    "org.robolectric.res.StyleData",
    "org.robolectric.res.StyleResolver",
    "org.robolectric.res.ThemeStyleSet",
    "org.robolectric.res.TypedResource",
    "org.robolectric.res.android.Asset",
    "org.robolectric.res.android.Registries",
    "org.robolectric.res.android.ResTable_config",
    "org.robolectric.res.builder.XmlBlock",
    "org.robolectric.shadow.api.Shadow",
    "org.robolectric.shadows.ShadowAssetManager.Picker",
    "org.robolectric.util.Logger",
    "org.robolectric.util.TempDirectory",
    "org.robolectric.util.reflector.Direct",
    "org.robolectric.util.reflector.ForType",
    "org.robolectric.shadows.ShadowLegacyAssetManager.NativeTheme",
    "org.robolectric.shadows.ShadowLegacyAssetManager.AssetManagerReflector"
  ],
  "name": "org.robolectric.shadows.ShadowLegacyAssetManager"
}