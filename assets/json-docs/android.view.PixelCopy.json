{
  "methods": {
    "alertFinished(android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler,int)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "listener",
        "listenerThread",
        "result"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "alertFinished(android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler,int)"
    },
    "findViewForSurface(android.view.Surface)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "source"
      ],
      "returnType": "android.view.View",
      "exceptions": [],
      "name": "findViewForSurface(android.view.Surface)"
    },
    "request(android.view.Surface,android.graphics.Rect,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "source",
        "srcRect",
        "dest",
        "listener",
        "listenerThread"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "request(android.view.Surface,android.graphics.Rect,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)"
    },
    "request(android.view.SurfaceView,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "source",
        "dest",
        "listener",
        "listenerThread"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "request(android.view.SurfaceView,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)"
    },
    "request(android.view.SurfaceView,android.graphics.Rect,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "source",
        "srcRect",
        "dest",
        "listener",
        "listenerThread"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "request(android.view.SurfaceView,android.graphics.Rect,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)"
    },
    "request(android.view.Window,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "source",
        "dest",
        "listener",
        "listenerThread"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "request(android.view.Window,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)"
    },
    "request(android.view.Window,android.graphics.Rect,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "source",
        "srcRect",
        "dest",
        "listener",
        "listenerThread"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "request(android.view.Window,android.graphics.Rect,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)"
    },
    "request(java.lang.Object,java.lang.Object,java.lang.Object)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "requestObject",
        "callbackExecutor",
        "listener"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 34,
      "name": "request(java.lang.Object,java.lang.Object,java.lang.Object)"
    },
    "takeScreenshot(android.view.View,android.graphics.Bitmap,android.graphics.Rect)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "view",
        "screenshot",
        "srcRect"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "takeScreenshot(android.view.View,android.graphics.Bitmap,android.graphics.Rect)"
    },
    "validateBitmap(android.graphics.Bitmap)": {
      "isImplementation": false,
      "modifiers": [
        "private",
        "static"
      ],
      "params": [
        "bitmap"
      ],
      "returnType": "android.graphics.Bitmap",
      "exceptions": [],
      "name": "validateBitmap(android.graphics.Bitmap)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.O",
    "com.google.common.base.Preconditions.checkNotNull",
    "org.robolectric.util.reflector.Reflector.reflector",
    "android.graphics.Bitmap",
    "android.graphics.Canvas",
    "android.graphics.Paint",
    "android.graphics.Rect",
    "android.os.Handler",
    "android.os.Looper",
    "android.view.PixelCopy",
    "android.view.PixelCopy.OnPixelCopyFinishedListener",
    "android.view.Surface",
    "android.view.SurfaceView",
    "android.view.View",
    "android.view.ViewRootImpl",
    "android.view.Window",
    "android.view.WindowManagerGlobal",
    "androidx.annotation.NonNull",
    "androidx.annotation.Nullable",
    "java.util.function.Consumer",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.shadow.api.Shadow",
    "org.robolectric.shadows.ShadowWindowManagerGlobal.WindowManagerGlobalReflector",
    "org.robolectric.util.reflector.Accessor",
    "org.robolectric.util.reflector.Constructor",
    "org.robolectric.util.reflector.ForType",
    "org.robolectric.util.reflector.Static",
    "org.robolectric.versioning.AndroidVersions.U",
    "org.robolectric.shadows.ShadowPixelCopy.ShadowPixelCopyRequestBuilder",
    "org.robolectric.shadows.ShadowPixelCopy.PixelCopyReflector",
    "org.robolectric.shadows.ShadowPixelCopy.BuilderReflector",
    "org.robolectric.shadows.ShadowPixelCopy.RequestReflector",
    "org.robolectric.shadows.ShadowPixelCopy.ResultReflector"
  ],
  "name": "org.robolectric.shadows.ShadowPixelCopy",
  "documentation": "Shadow for PixelCopy that uses View.draw to create screenshots. The real PixelCopy performs a\nfull hardware capture of the screen at the given location, which is impossible in Robolectric.\n\n\u003cp\u003eIf listenerThread is backed by a paused looper, make sure to call ShadowLooper.idle() to\nensure the screenshot finishes.\n"
}