{
  "methods": {
    "createConfirmFactoryResetCredentialIntent(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "title",
        "description",
        "alternateButtonLabel"
      ],
      "returnType": "android.content.Intent",
      "exceptions": [],
      "minSdk": 27,
      "name": "createConfirmFactoryResetCredentialIntent(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)",
      "documentation": "Returns the intent set via\n{@link #setConfirmFactoryResetCredentialIntent(Intent)}, otherwise null.\n"
    },
    "getCallback()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "android.app.KeyguardManager.KeyguardDismissCallback",
      "exceptions": [],
      "name": "getCallback()",
      "documentation": "Retrieves callback set by using requestDismissKeyguard.\n\n@return The callback passed in.\n"
    },
    "inKeyguardRestrictedInputMode()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "inKeyguardRestrictedInputMode()",
      "documentation": "For tests, returns the value set via {@link #setinRestrictedInputMode(boolean)}, or false by\ndefault.\n\n@see #setInRestrictedInputMode(boolean)\n"
    },
    "isDeviceLocked()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 22,
      "name": "isDeviceLocked()",
      "documentation": "@return false by default, or the value passed to {@link #setIsDeviceLocked(boolean)}.\n@see #isDeviceLocked()\n"
    },
    "isDeviceLocked(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "userId"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 22,
      "name": "isDeviceLocked(int)"
    },
    "isDeviceSecure()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 23,
      "name": "isDeviceSecure()",
      "documentation": "For tests on Android \u003e\u003dM, returns the value set by {@link #setIsDeviceSecure(boolean)}, or\nfalse by default.\n\n@see #setIsDeviceSecure(boolean)\n"
    },
    "isDeviceSecure(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "userId"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 23,
      "name": "isDeviceSecure(int)",
      "documentation": "For tests on Android \u003e\u003dM, returns the value set by {@link #setIsDeviceSecure(int, boolean)}, or\nfalse by default.\n\n@see #setIsDeviceSecure(int, boolean)\n"
    },
    "isKeyguardLocked()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isKeyguardLocked()",
      "documentation": "For tests, returns the value set via {@link #setKeyguardLocked(boolean)}, or false by default.\n\n@see #setKeyguardLocked(boolean)\n"
    },
    "isKeyguardSecure()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "isKeyguardSecure()",
      "documentation": "For tests, returns the value set by {@link #setIsKeyguardSecure(boolean)}, or false by default.\n\n@see #setIsKeyguardSecure(boolean)\n"
    },
    "newKeyguardLock(java.lang.String)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "tag"
      ],
      "returnType": "android.app.KeyguardManager.KeyguardLock",
      "exceptions": [],
      "name": "newKeyguardLock(java.lang.String)",
      "documentation": "For tests, returns a {@link ShadowKeyguardLock}.\n\n@see ShadowKeyguardLock\n"
    },
    "requestDismissKeyguard(android.app.Activity,android.app.KeyguardManager.KeyguardDismissCallback)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "activity",
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 26,
      "name": "requestDismissKeyguard(android.app.Activity,android.app.KeyguardManager.KeyguardDismissCallback)"
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()"
    },
    "setConfirmFactoryResetCredentialIntent(android.content.Intent)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "intent"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setConfirmFactoryResetCredentialIntent(android.content.Intent)",
      "documentation": "For tests on Android \u003e\u003d O MR1, sets the value to be returned by\n{@link #createConfirmFactoryResetCredentialIntent(CharSequence,CharSequence,CharSequence)}.\n\n@see #createConfirmFactoryResetCredentialIntent(CharSequence,CharSequence,CharSequence)\n"
    },
    "setInRestrictedInputMode(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "restricted"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setInRestrictedInputMode(boolean)",
      "documentation": "Sets the value to be returned by {@link KeyguardManager#inKeyguardRestrictedInputMode()}.\n\n@see KeyguardManager#inKeyguardRestrictedInputMode()\n"
    },
    "setIsDeviceLocked(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isDeviceLocked"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsDeviceLocked(boolean)",
      "documentation": "For tests on Android \u003e\u003dL MR1, sets the value to be returned by {@link #isDeviceLocked()}.\n\n@see #isDeviceLocked()\n"
    },
    "setIsDeviceLocked(int,boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "userId",
        "isLocked"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsDeviceLocked(int,boolean)",
      "documentation": "For tests on Android \u003e\u003d L MR1, sets the value to be returned by {@link #isDeviceLocked(int)}.\n\n@see #isDeviceLocked(int)\n"
    },
    "setIsDeviceSecure(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isDeviceSecure"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsDeviceSecure(boolean)",
      "documentation": "For tests on Android \u003e\u003dM, sets the value to be returned by {@link #isDeviceSecure()}.\n\n@see #isDeviceSecure()\n"
    },
    "setIsDeviceSecure(int,boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "userId",
        "isDeviceSecure"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsDeviceSecure(int,boolean)",
      "documentation": "For tests on Android \u003e\u003dM, sets the value to be returned by {@link #isDeviceSecure(int)}.\n\n@see #isDeviceSecure(int)\n"
    },
    "setIsKeyguardSecure(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "secure"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setIsKeyguardSecure(boolean)",
      "documentation": "Sets the value to be returned by {@link #isKeyguardSecure()}.\n\n@see #isKeyguardSecure()\n"
    },
    "setKeyguardLocked(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isKeyguardLocked"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setKeyguardLocked(boolean)",
      "documentation": "Sets whether the device keyguard is locked or not. This affects the value to be returned by\n{@link #isKeyguardLocked()} and also invokes callbacks set in\n {@link KeyguardManager#requestDismissKeyguard()}.\n\n @param isKeyguardLocked true to lock the keyguard. If a KeyguardDismissCallback is set will\n fire {@link KeyguardDismissCallback#onDismissCancelled()} or false to unlock and dismiss the\n keyguard firing {@link KeyguardDismissCallback#onDismissSucceeded()} if a\n KeyguardDismissCallback is set.\n "
    },
    "setinRestrictedInputMode(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "restricted"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setinRestrictedInputMode(boolean)",
      "documentation": "Sets the value to be returned by {@link KeyguardManager#inKeyguardRestrictedInputMode()}.\n\n@see KeyguardManager#inKeyguardRestrictedInputMode()\n@deprecated use {@link #setInRestrictedInputMode(boolean)} instead\n"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.LOLLIPOP_MR1",
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.O",
    "android.os.Build.VERSION_CODES.O_MR1",
    "android.annotation.TargetApi",
    "android.app.Activity",
    "android.app.KeyguardManager",
    "android.app.KeyguardManager.KeyguardDismissCallback",
    "android.content.Intent",
    "android.os.Build.VERSION_CODES",
    "java.util.HashSet",
    "java.util.Set",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.Resetter",
    "org.robolectric.shadow.api.Shadow",
    "org.robolectric.shadows.ShadowKeyguardManager.ShadowKeyguardLock"
  ],
  "name": "org.robolectric.shadows.ShadowKeyguardManager"
}