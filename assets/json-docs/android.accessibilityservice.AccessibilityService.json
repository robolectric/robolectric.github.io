{
  "methods": {
    "dispatchGesture(android.accessibilityservice.GestureDescription,android.accessibilityservice.AccessibilityService.GestureResultCallback,android.os.Handler)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "gesture",
        "callback",
        "handler"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 24,
      "name": "dispatchGesture(android.accessibilityservice.GestureDescription,android.accessibilityservice.AccessibilityService.GestureResultCallback,android.os.Handler)"
    },
    "getGesturesDispatched()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003corg.robolectric.shadows.ShadowAccessibilityService.GestureDispatch\u003e",
      "exceptions": [],
      "name": "getGesturesDispatched()",
      "documentation": "Returns a list of gestures that have been dispatched.\n\nGestures are dispatched by calling {@link AccessibilityService#dispatchGesture}.\n"
    },
    "getGlobalActionsPerformed()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "java.util.List\u003cjava.lang.Integer\u003e",
      "exceptions": [],
      "name": "getGlobalActionsPerformed()"
    },
    "getSystemActions()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "final"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.view.accessibility.AccessibilityNodeInfo.AccessibilityAction\u003e",
      "exceptions": [],
      "minSdk": 31,
      "name": "getSystemActions()"
    },
    "getWindows()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.view.accessibility.AccessibilityWindowInfo\u003e",
      "exceptions": [],
      "minSdk": 21,
      "name": "getWindows()",
      "documentation": "Returns a representation of interactive windows shown on the device screen. Mirrors the values\nprovided to {@link #setWindows(List\u003cAccessibilityWindowInfo\u003e)}. Returns an empty List if not\nset.\n"
    },
    "performGlobalAction(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "final"
      ],
      "params": [
        "action"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "performGlobalAction(int)"
    },
    "setCanDispatchGestures(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "canDispatchGestures"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCanDispatchGestures(boolean)",
      "documentation": "Sets whether the service is currently able to dispatch gestures.\n\nIf {@code false}, {@link AccessibilityService#dispatchGesture} will return {@code false}.\n"
    },
    "setSystemActions(java.util.List\u003candroid.view.accessibility.AccessibilityNodeInfo.AccessibilityAction\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "final"
      ],
      "params": [
        "systemActions"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSystemActions(java.util.List\u003candroid.view.accessibility.AccessibilityNodeInfo.AccessibilityAction\u003e)"
    },
    "setTakeScreenshotErrorCode(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "errorCode"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setTakeScreenshotErrorCode(int)",
      "documentation": "Sets {@link AccessibilityService#takeScreenshot(int, Executor, TakeScreenshotCallback)} to\nstart returning the given {@code errorCode}.\n\n@see #unsetTakeScreenshotErrorCode() to unset the error condition.\n"
    },
    "setWindows(java.util.List\u003candroid.view.accessibility.AccessibilityWindowInfo\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "windowList"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setWindows(java.util.List\u003candroid.view.accessibility.AccessibilityWindowInfo\u003e)",
      "documentation": "Sets the list of interactive windows shown on the device screen as reported by {@link\n#getWindows()}\n"
    },
    "takeScreenshot(int,java.util.concurrent.Executor,android.accessibilityservice.AccessibilityService.TakeScreenshotCallback)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "displayId",
        "executor",
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 30,
      "name": "takeScreenshot(int,java.util.concurrent.Executor,android.accessibilityservice.AccessibilityService.TakeScreenshotCallback)"
    },
    "unsetTakeScreenshotErrorCode()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "unsetTakeScreenshotErrorCode()",
      "documentation": "Sets {@link AccessibilityService#takeScreenshot(int, Executor, TakeScreenshotCallback)} to\nstart returning successful results again.\n\n@see #setTakeScreenshotErrorCode(int) to set an error condition instead.\n"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.LOLLIPOP",
    "android.os.Build.VERSION_CODES.N",
    "android.os.Build.VERSION_CODES.R",
    "android.os.Build.VERSION_CODES.S",
    "android.accessibilityservice.AccessibilityService",
    "android.accessibilityservice.AccessibilityService.GestureResultCallback",
    "android.accessibilityservice.AccessibilityService.ScreenshotErrorCode",
    "android.accessibilityservice.AccessibilityService.ScreenshotResult",
    "android.accessibilityservice.AccessibilityService.TakeScreenshotCallback",
    "android.accessibilityservice.GestureDescription",
    "android.graphics.ColorSpace",
    "android.graphics.ColorSpace.Named",
    "android.hardware.HardwareBuffer",
    "android.os.Handler",
    "android.os.SystemClock",
    "android.view.accessibility.AccessibilityNodeInfo",
    "android.view.accessibility.AccessibilityWindowInfo",
    "java.util.ArrayList",
    "java.util.List",
    "java.util.concurrent.Executor",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.util.ReflectionHelpers",
    "org.robolectric.util.ReflectionHelpers.ClassParameter",
    "org.robolectric.shadows.ShadowAccessibilityService.GestureDispatch"
  ],
  "name": "org.robolectric.shadows.ShadowAccessibilityService",
  "documentation": "Shadow of AccessibilityService that tracks global actions and provides a mechanism to simulate\nthe window list.\n"
}