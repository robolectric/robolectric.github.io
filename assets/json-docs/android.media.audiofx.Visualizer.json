{
  "methods": {
    "native_getCaptureSize()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "native_getCaptureSize()"
    },
    "native_getEnabled()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "name": "native_getEnabled()"
    },
    "native_getFft(byte[])": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "fft"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "native_getFft(byte[])"
    },
    "native_getPeakRms(android.media.audiofx.Visualizer.MeasurementPeakRms)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "measurement"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "native_getPeakRms(android.media.audiofx.Visualizer.MeasurementPeakRms)"
    },
    "native_getSamplingRate()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "native_getSamplingRate()"
    },
    "native_getWaveForm(byte[])": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "waveform"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "native_getWaveForm(byte[])"
    },
    "native_release()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "native_release()"
    },
    "native_setCaptureSize(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "size"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "native_setCaptureSize(int)"
    },
    "native_setEnabled(boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "enabled"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "native_setEnabled(boolean)"
    },
    "setDataCaptureListener(android.media.audiofx.Visualizer.OnDataCaptureListener,int,boolean,boolean)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener",
        "rate",
        "waveform",
        "fft"
      ],
      "returnType": "int",
      "exceptions": [],
      "name": "setDataCaptureListener(android.media.audiofx.Visualizer.OnDataCaptureListener,int,boolean,boolean)"
    },
    "setErrorCode(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "errorCode"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setErrorCode(int)",
      "documentation": "Sets the error code to override setter methods in this class.\n\n\u003cp\u003eWhen the error code is set to anything other than {@link Visualizer.SUCCESS} setters in the\nVisualizer will early-out and return that error code.\n"
    },
    "setSource(org.robolectric.shadows.ShadowVisualizer.VisualizerSource)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "source"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setSource(org.robolectric.shadows.ShadowVisualizer.VisualizerSource)"
    },
    "setState(int)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "newState"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setState(int)",
      "documentation": "Updates the state of the {@link Visualizer} itself.\n\n\u003cp\u003eThis can be used e.g. to put the Visualizer in an unexpected state and cause an exception\nthe next time the Visualizer is used.\n"
    },
    "triggerDataCapture()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "triggerDataCapture()",
      "documentation": "Trigger calls to the existing {@link OnDataCaptureListener}.\n\n\u003cp\u003eThis is a no-op if the listener has not been set.\n"
    }
  },
  "imports": [
    "org.robolectric.util.reflector.Reflector.reflector",
    "android.media.audiofx.Visualizer",
    "android.media.audiofx.Visualizer.MeasurementPeakRms",
    "android.media.audiofx.Visualizer.OnDataCaptureListener",
    "java.util.concurrent.atomic.AtomicReference",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.util.reflector.Accessor",
    "org.robolectric.util.reflector.ForType",
    "org.robolectric.shadows.ShadowVisualizer.VisualizerSource",
    "org.robolectric.shadows.ShadowVisualizer.ReflectorVisualizer"
  ],
  "name": "org.robolectric.shadows.ShadowVisualizer",
  "documentation": "Shadow for the {@link Visualizer} class. "
}