{
  "methods": {
    "isAvailable()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 28,
      "name": "isAvailable()",
      "documentation": "Assumes the WifiRttManager is always available. "
    },
    "setRangeResults(java.util.List\u003candroid.net.wifi.rtt.RangingResult\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "rangingResults"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setRangeResults(java.util.List\u003candroid.net.wifi.rtt.RangingResult\u003e)",
      "documentation": "This method sets the RangingResults that are passed to the RangingResultCallback when the\nshadow startRanging method is called.\n"
    },
    "startRanging(android.net.wifi.rtt.RangingRequest,java.util.concurrent.Executor,android.net.wifi.rtt.RangingResultCallback)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "request",
        "executor",
        "callback"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 28,
      "name": "startRanging(android.net.wifi.rtt.RangingRequest,java.util.concurrent.Executor,android.net.wifi.rtt.RangingResultCallback)",
      "documentation": "If there are RangingResults set by the setRangeResults method of this shadow class, this method\nwill call the onRangingResults method of the callback on the executor thread and pass the list\nof RangingResults. If there are no ranging results set, it will pass\nRangingResultCallback.STATUS_CODE_FAIL to the onRangingFailure method of the callback, also\ncalled on the executor thread.\n"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.P",
    "android.net.wifi.rtt.RangingRequest",
    "android.net.wifi.rtt.RangingResult",
    "android.net.wifi.rtt.RangingResultCallback",
    "android.net.wifi.rtt.WifiRttManager",
    "java.util.ArrayList",
    "java.util.List",
    "java.util.concurrent.Executor",
    "org.robolectric.annotation.Config",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements"
  ],
  "name": "org.robolectric.shadows.ShadowWifiRttManager",
  "documentation": "Shadow for {@link android.net.wifi.rtt.WifiRttManager}. "
}