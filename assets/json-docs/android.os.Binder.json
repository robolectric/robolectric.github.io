{
  "methods": {
    "getCallingPid()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static",
        "final"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getCallingPid()"
    },
    "getCallingUid()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static",
        "final"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "name": "getCallingUid()"
    },
    "getCallingUidOrThrow()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static",
        "final"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 29,
      "name": "getCallingUidOrThrow()",
      "documentation": "See {@link Binder#getCallingUidOrThrow()}. Whether or not this returns a value is controlled by\n{@link #setCallingUid(int)} (to set the value to be returned) or by {@link #reset()} (to\ntrigger the exception).\n\n@return the value set by {@link #setCallingUid(int)}\n@throws IllegalStateException if no UID has been set\n"
    },
    "getCallingUserHandle()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static",
        "final"
      ],
      "params": [],
      "returnType": "android.os.UserHandle",
      "exceptions": [],
      "minSdk": 17,
      "name": "getCallingUserHandle()"
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()"
    },
    "setCallingPid(int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "pid"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCallingPid(int)"
    },
    "setCallingUid(int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "uid"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCallingUid(int)"
    },
    "setCallingUserHandle(android.os.UserHandle)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "userHandle"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setCallingUserHandle(android.os.UserHandle)",
      "documentation": "Configures {@link android.os.Binder#getCallingUserHandle} to return the specified {@link\nUserHandle} to subsequent callers on *any* thread, for testing purposes.\n"
    },
    "transact(int,android.os.Parcel,android.os.Parcel,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "code",
        "data",
        "reply",
        "flags"
      ],
      "returnType": "boolean",
      "exceptions": [
        "android.os.RemoteException"
      ],
      "name": "transact(int,android.os.Parcel,android.os.Parcel,int)"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.JELLY_BEAN_MR1",
    "android.os.Build.VERSION_CODES.Q",
    "android.os.Binder",
    "android.os.Parcel",
    "android.os.RemoteException",
    "android.os.UserHandle",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.RealObject",
    "org.robolectric.annotation.Resetter"
  ],
  "name": "org.robolectric.shadows.ShadowBinder"
}