{
  "methods": {
    "addStorageVolume(android.os.storage.StorageVolume)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "storageVolume"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "addStorageVolume(android.os.storage.StorageVolume)",
      "documentation": "Adds a {@link StorageVolume} to the list returned by {@link #getStorageVolumes()}.\n\n@param StorageVolume to add to list\n"
    },
    "getStorageVolume(java.io.File)": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [
        "file"
      ],
      "returnType": "android.os.storage.StorageVolume",
      "exceptions": [],
      "minSdk": 24,
      "name": "getStorageVolume(java.io.File)",
      "documentation": "Checks whether File belongs to any {@link StorageVolume} in the list returned by {@link\n#getStorageVolumes()}.\n\n@param File to check\n@return StorageVolume for the file\n"
    },
    "getStorageVolumes()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.os.storage.StorageVolume\u003e",
      "exceptions": [],
      "minSdk": 24,
      "name": "getStorageVolumes()",
      "documentation": "Returns the storage volumes configured via {@link #addStorageVolume()}.\n\n@return StorageVolume list\n"
    },
    "getVolumeList()": {
      "isImplementation": true,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "android.os.storage.StorageVolume[]",
      "exceptions": [],
      "name": "getVolumeList()",
      "documentation": "Gets the volume list from {@link #getVolumeList(int, int)}\n\n@return volume list\n"
    },
    "getVolumeList(int,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "userId",
        "flags"
      ],
      "returnType": "android.os.storage.StorageVolume[]",
      "exceptions": [],
      "minSdk": 23,
      "name": "getVolumeList(int,int)"
    },
    "isFileEncryptedNativeOrEmulated()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 24,
      "maxSdk": 33,
      "name": "isFileEncryptedNativeOrEmulated()"
    },
    "isUserKeyUnlocked(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "userId"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 24,
      "maxSdk": 34,
      "name": "isUserKeyUnlocked(int)"
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()"
    },
    "resetStorageVolumeList()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "resetStorageVolumeList()",
      "documentation": "Clears the storageVolumeList. "
    },
    "setFileEncryptedNativeOrEmulated(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "isSupported"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setFileEncryptedNativeOrEmulated(boolean)",
      "documentation": "Setter for {@link #isFileEncryptedNativeOrEmulated()}\n\n@param isSupported a boolean value to set file encrypted native or not\n"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.N",
    "android.os.Build.VERSION_CODES.TIRAMISU",
    "android.os.Build.VERSION_CODES.UPSIDE_DOWN_CAKE",
    "android.os.UserManager",
    "android.os.storage.StorageManager",
    "android.os.storage.StorageVolume",
    "com.google.common.base.Preconditions",
    "java.io.File",
    "java.util.ArrayList",
    "java.util.List",
    "org.robolectric.RuntimeEnvironment",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.Resetter",
    "org.robolectric.shadow.api.Shadow"
  ],
  "name": "org.robolectric.shadows.ShadowStorageManager",
  "documentation": "Fake implementation of {@link android.os.storage.StorageManager}\n"
}