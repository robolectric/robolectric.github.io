{
  "methods": {
    "addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 22,
      "name": "addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)",
      "documentation": "Adds a listener to a local list of listeners. Will be triggered by {@link\n#setActiveSubscriptionInfoList} when the local list of {@link SubscriptionInfo} is updated.\n"
    },
    "addOnSubscriptionsChangedListener(java.util.concurrent.Executor,android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "executor",
        "listener"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 30,
      "name": "addOnSubscriptionsChangedListener(java.util.concurrent.Executor,android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)",
      "documentation": "Adds a listener to a local list of listeners. Will be triggered by {@link\n#setActiveSubscriptionInfoList} when the local list of {@link SubscriptionInfo} is updated.\n"
    },
    "checkReadPhoneNumbersPermission()": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "checkReadPhoneNumbersPermission()"
    },
    "checkReadPhoneStatePermission()": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "checkReadPhoneStatePermission()"
    },
    "clearNetworkRoamingStatus()": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "clearNetworkRoamingStatus()",
      "documentation": "Clears the local cache of roaming subscription Ids used by {@link #isNetworkRoaming}. "
    },
    "clearPhoneIds()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "clearPhoneIds()",
      "documentation": "Removes all mappings between subscription IDs and phone IDs from the map used by {@link\ngetPhoneId}.\n"
    },
    "dispatchOnSubscriptionsChanged()": {
      "isImplementation": false,
      "modifiers": [
        "private"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "dispatchOnSubscriptionsChanged()",
      "documentation": "Notifies {@link OnSubscriptionsChangedListener} listeners that the list of {@link\nSubscriptionInfo} has been updated.\n"
    },
    "getActiveDataSubscriptionId()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 30,
      "name": "getActiveDataSubscriptionId()",
      "documentation": "Returns value set with {@link #setActiveDataSubscriptionId(int)}. "
    },
    "getActiveSubscriptionIdList()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int[]",
      "exceptions": [],
      "minSdk": 22,
      "name": "getActiveSubscriptionIdList()",
      "documentation": "Returns subscription Ids that were set via {@link #setActiveSubscriptionInfoList}. "
    },
    "getActiveSubscriptionInfo(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "subId"
      ],
      "returnType": "android.telephony.SubscriptionInfo",
      "exceptions": [],
      "minSdk": 22,
      "name": "getActiveSubscriptionInfo(int)",
      "documentation": "Returns subscription that were set via {@link #setActiveSubscriptionInfoList} if it can find\none with the specified id or null if none found.\n\n\u003cp\u003eAn exception will be thrown if the READ_PHONE_STATE permission has not been granted.\n"
    },
    "getActiveSubscriptionInfoCount()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 22,
      "name": "getActiveSubscriptionInfoCount()",
      "documentation": "Returns the size of the list of {@link SubscriptionInfo} that were set via {@link\n#setActiveSubscriptionInfoList}. If no list was set, returns 0.\n"
    },
    "getActiveSubscriptionInfoCountMax()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 22,
      "name": "getActiveSubscriptionInfoCountMax()",
      "documentation": "@return the maximum number of active subscriptions that will be returned by {@link\n    #getActiveSubscriptionInfoList} and the value returned by {@link\n    #getActiveSubscriptionInfoCount}.\n"
    },
    "getActiveSubscriptionInfoForSimSlotIndex(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "slotIndex"
      ],
      "returnType": "android.telephony.SubscriptionInfo",
      "exceptions": [],
      "minSdk": 24,
      "name": "getActiveSubscriptionInfoForSimSlotIndex(int)",
      "documentation": "Returns subscription that were set via {@link #setActiveSubscriptionInfoList} if it can find\none with the specified slot index or null if none found.\n"
    },
    "getActiveSubscriptionInfoList()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.telephony.SubscriptionInfo\u003e",
      "exceptions": [],
      "minSdk": 22,
      "name": "getActiveSubscriptionInfoList()",
      "documentation": "Returns the active list of {@link SubscriptionInfo} that were set via {@link\n#setActiveSubscriptionInfoList}.\n"
    },
    "getAvailableSubscriptionInfoList()": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [],
      "returnType": "java.util.List\u003candroid.telephony.SubscriptionInfo\u003e",
      "exceptions": [],
      "minSdk": 27,
      "name": "getAvailableSubscriptionInfoList()",
      "documentation": "Returns the available list of {@link SubscriptionInfo} that were set via {@link\n#setAvailableSubscriptionInfoList}.\n"
    },
    "getDefaultDataSubId()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 23,
      "name": "getDefaultDataSubId()"
    },
    "getDefaultDataSubscriptionId()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 24,
      "name": "getDefaultDataSubscriptionId()",
      "documentation": "Returns value set with {@link #setDefaultDataSubscriptionId(int)}. "
    },
    "getDefaultSmsSubId()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 23,
      "name": "getDefaultSmsSubId()"
    },
    "getDefaultSmsSubscriptionId()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 24,
      "name": "getDefaultSmsSubscriptionId()",
      "documentation": "Returns value set with {@link #setDefaultSmsSubscriptionId(int)}. "
    },
    "getDefaultSubId()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 23,
      "name": "getDefaultSubId()"
    },
    "getDefaultSubscriptionId()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 24,
      "name": "getDefaultSubscriptionId()",
      "documentation": "Returns value set with {@link #setDefaultSubscriptionId(int)}. "
    },
    "getDefaultVoiceSubId()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "maxSdk": 23,
      "name": "getDefaultVoiceSubId()"
    },
    "getDefaultVoiceSubscriptionId()": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 24,
      "name": "getDefaultVoiceSubscriptionId()",
      "documentation": "Returns value set with {@link #setDefaultVoiceSubscriptionId(int)}. "
    },
    "getPhoneId(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected",
        "static"
      ],
      "params": [
        "subId"
      ],
      "returnType": "int",
      "exceptions": [],
      "minSdk": 22,
      "maxSdk": 28,
      "name": "getPhoneId(int)",
      "documentation": "Uses the map of subscription IDs to phone IDs managed by {@link putPhoneId} and {@link\nremovePhoneId} to return the phone ID for a given subscription ID.\n"
    },
    "getPhoneNumber(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "subscriptionId"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 33,
      "name": "getPhoneNumber(int)",
      "documentation": "Returns the phone number for the given {@code subscriptionId}, or an empty string if not\navailable.\n\n\u003cp\u003eThe phone number can be set by {@link #setPhoneNumber(int, String)}\n\n\u003cp\u003eAn exception will be thrown if the READ_PHONE_NUMBERS permission has not been granted.\n"
    },
    "getPhoneNumber(int,int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "subscriptionId",
        "source"
      ],
      "returnType": "java.lang.String",
      "exceptions": [],
      "minSdk": 33,
      "name": "getPhoneNumber(int,int)",
      "documentation": "Returns the phone number for the given {@code subscriptionId}, or an empty string if not\navailable. {@code source} is ignored and will return the same as {@link #getPhoneNumber(int)}.\n\n\u003cp\u003eThe phone number can be set by {@link #setPhoneNumber(int, String)}\n"
    },
    "hasOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "listener"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "name": "hasOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)",
      "documentation": "Check if a listener exists in the {@link ShadowSubscriptionManager.listeners}.\n\n@param listener The listener to check.\n@return boolean True if the listener already added, otherwise false.\n"
    },
    "isNetworkRoaming(int)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "simSubscriptionId"
      ],
      "returnType": "boolean",
      "exceptions": [],
      "minSdk": 22,
      "name": "isNetworkRoaming(int)",
      "documentation": "Uses the local cache of roaming sim subscription Ids managed by {@link\n#setNetworkRoamingStatus} to return subscription Ids marked as roaming. Otherwise subscription\nIds will be considered as non-roaming if they are not in the cache.\n"
    },
    "putPhoneId(int,int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "subId",
        "phoneId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "putPhoneId(int,int)",
      "documentation": "Adds a subscription ID-phone ID mapping to the map used by {@link getPhoneId}. "
    },
    "removeOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)": {
      "isImplementation": true,
      "modifiers": [
        "protected"
      ],
      "params": [
        "listener"
      ],
      "returnType": "void",
      "exceptions": [],
      "minSdk": 22,
      "name": "removeOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)",
      "documentation": "Removes a listener from a local list of listeners. Will be triggered by {@link\n#setActiveSubscriptionInfoList} when the local list of {@link SubscriptionInfo} is updated.\n"
    },
    "removePhoneId(int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "subId"
      ],
      "returnType": "java.lang.Integer",
      "exceptions": [],
      "name": "removePhoneId(int)",
      "documentation": "Removes a subscription ID-phone ID mapping from the map used by {@link getPhoneId}.\n\n@return the previous phone ID associated with the subscription ID, or null if there was no\n    mapping for the subscription ID\n"
    },
    "reset()": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [],
      "returnType": "void",
      "exceptions": [],
      "name": "reset()"
    },
    "setActiveDataSubscriptionId(int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "activeDataSubscriptionId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setActiveDataSubscriptionId(int)",
      "documentation": "Sets the value that will be returned by {@link #getActiveDataSubscriptionId()}. "
    },
    "setActiveSubscriptionInfoList(java.util.List\u003candroid.telephony.SubscriptionInfo\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "list"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setActiveSubscriptionInfoList(java.util.List\u003candroid.telephony.SubscriptionInfo\u003e)",
      "documentation": "Sets the active list of {@link SubscriptionInfo}. This call internally triggers {@link\nOnSubscriptionsChangedListener#onSubscriptionsChanged()} to all the listeners.\n\n@param list - The subscription info list, can be null.\n"
    },
    "setActiveSubscriptionInfos(android.telephony.SubscriptionInfo...)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "infos"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setActiveSubscriptionInfos(android.telephony.SubscriptionInfo...)",
      "documentation": "Sets the active list of {@link SubscriptionInfo}. This call internally triggers {@link\nOnSubscriptionsChangedListener#onSubscriptionsChanged()} to all the listeners.\n"
    },
    "setAvailableSubscriptionInfoList(java.util.List\u003candroid.telephony.SubscriptionInfo\u003e)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "list"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setAvailableSubscriptionInfoList(java.util.List\u003candroid.telephony.SubscriptionInfo\u003e)",
      "documentation": "Sets the active list of {@link SubscriptionInfo}. This call internally triggers {@link\nOnSubscriptionsChangedListener#onSubscriptionsChanged()} to all the listeners.\n\n@param list - The subscription info list, can be null.\n"
    },
    "setAvailableSubscriptionInfos(android.telephony.SubscriptionInfo...)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "infos"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setAvailableSubscriptionInfos(android.telephony.SubscriptionInfo...)",
      "documentation": "Sets the active list of {@link SubscriptionInfo}. This call internally triggers {@link\nOnSubscriptionsChangedListener#onSubscriptionsChanged()} to all the listeners.\n"
    },
    "setDefaultDataSubscriptionId(int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "defaultDataSubscriptionId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDefaultDataSubscriptionId(int)"
    },
    "setDefaultSmsSubscriptionId(int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "defaultSmsSubscriptionId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDefaultSmsSubscriptionId(int)"
    },
    "setDefaultSubscriptionId(int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "defaultSubscriptionId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDefaultSubscriptionId(int)",
      "documentation": "Sets the value that will be returned by {@link #getDefaultSubscriptionId()}. "
    },
    "setDefaultVoiceSubscriptionId(int)": {
      "isImplementation": false,
      "modifiers": [
        "public",
        "static"
      ],
      "params": [
        "defaultVoiceSubscriptionId"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setDefaultVoiceSubscriptionId(int)"
    },
    "setNetworkRoamingStatus(int,boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "simSubscriptionId",
        "isNetworkRoaming"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setNetworkRoamingStatus(int,boolean)",
      "documentation": "If isNetworkRoaming is set, it will mark the provided sim subscriptionId as roaming in a local\ncache. If isNetworkRoaming is unset it will remove the subscriptionId from the local cache. The\nlocal cache is used to provide roaming status returned by {@link #isNetworkRoaming}.\n"
    },
    "setPhoneNumber(int,java.lang.String)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "subscriptionId",
        "phoneNumber"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setPhoneNumber(int,java.lang.String)",
      "documentation": "Sets the phone number returned by {@link #getPhoneNumber(int)}. "
    },
    "setReadPhoneNumbersPermission(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "readPhoneNumbersPermission"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setReadPhoneNumbersPermission(boolean)",
      "documentation": "When set to false methods requiring {@link android.Manifest.permission.READ_PHONE_NUMBERS}\npermission will throw a {@link SecurityException}. By default it\u0027s set to true for backwards\ncompatibility.\n"
    },
    "setReadPhoneStatePermission(boolean)": {
      "isImplementation": false,
      "modifiers": [
        "public"
      ],
      "params": [
        "readPhoneStatePermission"
      ],
      "returnType": "void",
      "exceptions": [],
      "name": "setReadPhoneStatePermission(boolean)",
      "documentation": "When set to false methods requiring {@link android.Manifest.permission.READ_PHONE_STATE}\npermission will throw a {@link SecurityException}. By default it\u0027s set to true for backwards\ncompatibility.\n"
    }
  },
  "imports": [
    "android.os.Build.VERSION_CODES.LOLLIPOP_MR1",
    "android.os.Build.VERSION_CODES.M",
    "android.os.Build.VERSION_CODES.N",
    "android.os.Build.VERSION_CODES.O_MR1",
    "android.os.Build.VERSION_CODES.P",
    "android.os.Build.VERSION_CODES.Q",
    "android.os.Build.VERSION_CODES.R",
    "android.os.Build.VERSION_CODES.TIRAMISU",
    "android.os.Build.VERSION",
    "android.telephony.SubscriptionInfo",
    "android.telephony.SubscriptionManager",
    "android.telephony.SubscriptionManager.OnSubscriptionsChangedListener",
    "com.google.common.collect.ImmutableList",
    "java.util.ArrayList",
    "java.util.Arrays",
    "java.util.HashMap",
    "java.util.HashSet",
    "java.util.List",
    "java.util.Map",
    "java.util.Set",
    "java.util.concurrent.Executor",
    "org.robolectric.annotation.HiddenApi",
    "org.robolectric.annotation.Implementation",
    "org.robolectric.annotation.Implements",
    "org.robolectric.annotation.Resetter",
    "org.robolectric.util.ReflectionHelpers",
    "org.robolectric.shadows.ShadowSubscriptionManager.SubscriptionInfoBuilder"
  ],
  "name": "org.robolectric.shadows.ShadowSubscriptionManager"
}